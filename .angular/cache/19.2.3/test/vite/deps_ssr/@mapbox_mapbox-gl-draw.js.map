{
  "version": 3,
  "sources": ["../../../../../../node_modules/wgs84/index.js", "../../../../../../node_modules/@mapbox/geojson-area/index.js", "../../../../../../node_modules/fast-deep-equal/index.js", "../../../../../../node_modules/@mapbox/geojson-normalize/index.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/mode_handler.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/sort_features.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/constants.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/map_event_to_bounding_box.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/string_set.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/features_at.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/get_features_and_set_cursor.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/euclidean_distance.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/is_click.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/is_tap.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/node_modules/nanoid/non-secure/index.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/id.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/feature_types/feature.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/feature_types/point.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/feature_types/line_string.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/feature_types/polygon.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/feature_types/multi_feature.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/mode_interface_accessors.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/mode_interface.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/object_to_mode.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/events.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/to_dense_array.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/render.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/store.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/ui.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/setup.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/theme.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/common_selectors.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/node_modules/@mapbox/point-geometry/index.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/mouse_event_point.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/create_vertex.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/create_midpoint.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/create_supplementary_points.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/double_click_zoom.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/constrain_feature_movement.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/move_features.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/simple_select.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/direct_select.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_point.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/is_event_at_coordinates.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_polygon.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/draw_line_string.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/modes/index.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/options.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/api.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/string_sets_are_equal.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/src/lib/index.js", "../../../../../../node_modules/@mapbox/mapbox-gl-draw/index.js"],
  "sourcesContent": ["module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1 / 298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;", "var wgs84 = require('wgs84');\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\nfunction geometry(_) {\n  var area = 0,\n    i;\n  switch (_.type) {\n    case 'Polygon':\n      return polygonArea(_.coordinates);\n    case 'MultiPolygon':\n      for (i = 0; i < _.coordinates.length; i++) {\n        area += polygonArea(_.coordinates[i]);\n      }\n      return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n      return 0;\n    case 'GeometryCollection':\n      for (i = 0; i < _.geometries.length; i++) {\n        area += geometry(_.geometries[i]);\n      }\n      return area;\n  }\n}\nfunction polygonArea(coords) {\n  var area = 0;\n  if (coords && coords.length > 0) {\n    area += Math.abs(ringArea(coords[0]));\n    for (var i = 1; i < coords.length; i++) {\n      area -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n  var p1,\n    p2,\n    p3,\n    lowerIndex,\n    middleIndex,\n    upperIndex,\n    i,\n    area = 0,\n    coordsLength = coords.length;\n  if (coordsLength > 2) {\n    for (i = 0; i < coordsLength; i++) {\n      if (i === coordsLength - 2) {\n        // i = N-2\n        lowerIndex = coordsLength - 2;\n        middleIndex = coordsLength - 1;\n        upperIndex = 0;\n      } else if (i === coordsLength - 1) {\n        // i = N-1\n        lowerIndex = coordsLength - 1;\n        middleIndex = 0;\n        upperIndex = 1;\n      } else {\n        // i = 0 to N-3\n        lowerIndex = i;\n        middleIndex = i + 1;\n        upperIndex = i + 2;\n      }\n      p1 = coords[lowerIndex];\n      p2 = coords[middleIndex];\n      p3 = coords[upperIndex];\n      area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n    }\n    area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n  }\n  return area;\n}\nfunction rad(_) {\n  return _ * Math.PI / 180;\n}", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a !== a && b !== b;\n};", "module.exports = normalize;\nvar types = {\n  Point: 'geometry',\n  MultiPoint: 'geometry',\n  LineString: 'geometry',\n  MultiLineString: 'geometry',\n  Polygon: 'geometry',\n  MultiPolygon: 'geometry',\n  GeometryCollection: 'geometry',\n  Feature: 'feature',\n  FeatureCollection: 'featurecollection'\n};\n\n/**\n * Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data\n */\nfunction normalize(gj) {\n  if (!gj || !gj.type) return null;\n  var type = types[gj.type];\n  if (!type) return null;\n  if (type === 'geometry') {\n    return {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        properties: {},\n        geometry: gj\n      }]\n    };\n  } else if (type === 'feature') {\n    return {\n      type: 'FeatureCollection',\n      features: [gj]\n    };\n  } else if (type === 'featurecollection') {\n    return gj;\n  }\n}", "const ModeHandler = function (mode, DrawContext) {\n  const handlers = {\n    drag: [],\n    click: [],\n    mousemove: [],\n    mousedown: [],\n    mouseup: [],\n    mouseout: [],\n    keydown: [],\n    keyup: [],\n    touchstart: [],\n    touchmove: [],\n    touchend: [],\n    tap: []\n  };\n  const ctx = {\n    on(event, selector, fn) {\n      if (handlers[event] === undefined) {\n        throw new Error(`Invalid event type: ${event}`);\n      }\n      handlers[event].push({\n        selector,\n        fn\n      });\n    },\n    render(id) {\n      DrawContext.store.featureChanged(id);\n    }\n  };\n  const delegate = function (eventName, event) {\n    const handles = handlers[eventName];\n    let iHandle = handles.length;\n    while (iHandle--) {\n      const handle = handles[iHandle];\n      if (handle.selector(event)) {\n        const skipRender = handle.fn.call(ctx, event);\n        if (!skipRender) {\n          DrawContext.store.render();\n        }\n        DrawContext.ui.updateMapClasses();\n\n        // ensure an event is only handled once\n        // we do this to let modes have multiple overlapping selectors\n        // and relay on order of oppertations to filter\n        break;\n      }\n    }\n  };\n  mode.start.call(ctx);\n  return {\n    render: mode.render,\n    stop() {\n      if (mode.stop) mode.stop();\n    },\n    trash() {\n      if (mode.trash) {\n        mode.trash();\n        DrawContext.store.render();\n      }\n    },\n    combineFeatures() {\n      if (mode.combineFeatures) {\n        mode.combineFeatures();\n      }\n    },\n    uncombineFeatures() {\n      if (mode.uncombineFeatures) {\n        mode.uncombineFeatures();\n      }\n    },\n    drag(event) {\n      delegate('drag', event);\n    },\n    click(event) {\n      delegate('click', event);\n    },\n    mousemove(event) {\n      delegate('mousemove', event);\n    },\n    mousedown(event) {\n      delegate('mousedown', event);\n    },\n    mouseup(event) {\n      delegate('mouseup', event);\n    },\n    mouseout(event) {\n      delegate('mouseout', event);\n    },\n    keydown(event) {\n      delegate('keydown', event);\n    },\n    keyup(event) {\n      delegate('keyup', event);\n    },\n    touchstart(event) {\n      delegate('touchstart', event);\n    },\n    touchmove(event) {\n      delegate('touchmove', event);\n    },\n    touchend(event) {\n      delegate('touchend', event);\n    },\n    tap(event) {\n      delegate('tap', event);\n    }\n  };\n};\nexport default ModeHandler;", "import area from '@mapbox/geojson-area';\nimport * as Constants from '../constants.js';\nconst FEATURE_SORT_RANKS = {\n  Point: 0,\n  LineString: 1,\n  MultiLineString: 1,\n  Polygon: 2\n};\nfunction comparator(a, b) {\n  const score = FEATURE_SORT_RANKS[a.geometry.type] - FEATURE_SORT_RANKS[b.geometry.type];\n  if (score === 0 && a.geometry.type === Constants.geojsonTypes.POLYGON) {\n    return a.area - b.area;\n  }\n  return score;\n}\n\n// Sort in the order above, then sort polygons by area ascending.\nfunction sortFeatures(features) {\n  return features.map(feature => {\n    if (feature.geometry.type === Constants.geojsonTypes.POLYGON) {\n      feature.area = area.geometry({\n        type: Constants.geojsonTypes.FEATURE,\n        property: {},\n        geometry: feature.geometry\n      });\n    }\n    return feature;\n  }).sort(comparator).map(feature => {\n    delete feature.area;\n    return feature;\n  });\n}\nexport default sortFeatures;", "export const classes = {\n  CANVAS: 'mapboxgl-canvas',\n  CONTROL_BASE: 'mapboxgl-ctrl',\n  CONTROL_PREFIX: 'mapboxgl-ctrl-',\n  CONTROL_BUTTON: 'mapbox-gl-draw_ctrl-draw-btn',\n  CONTROL_BUTTON_LINE: 'mapbox-gl-draw_line',\n  CONTROL_BUTTON_POLYGON: 'mapbox-gl-draw_polygon',\n  CONTROL_BUTTON_POINT: 'mapbox-gl-draw_point',\n  CONTROL_BUTTON_TRASH: 'mapbox-gl-draw_trash',\n  CONTROL_BUTTON_COMBINE_FEATURES: 'mapbox-gl-draw_combine',\n  CONTROL_BUTTON_UNCOMBINE_FEATURES: 'mapbox-gl-draw_uncombine',\n  CONTROL_GROUP: 'mapboxgl-ctrl-group',\n  ATTRIBUTION: 'mapboxgl-ctrl-attrib',\n  ACTIVE_BUTTON: 'active',\n  BOX_SELECT: 'mapbox-gl-draw_boxselect'\n};\nexport const sources = {\n  HOT: 'mapbox-gl-draw-hot',\n  COLD: 'mapbox-gl-draw-cold'\n};\nexport const cursors = {\n  ADD: 'add',\n  MOVE: 'move',\n  DRAG: 'drag',\n  POINTER: 'pointer',\n  NONE: 'none'\n};\nexport const types = {\n  POLYGON: 'polygon',\n  LINE: 'line_string',\n  POINT: 'point'\n};\nexport const geojsonTypes = {\n  FEATURE: 'Feature',\n  POLYGON: 'Polygon',\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  FEATURE_COLLECTION: 'FeatureCollection',\n  MULTI_PREFIX: 'Multi',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon'\n};\nexport const modes = {\n  DRAW_LINE_STRING: 'draw_line_string',\n  DRAW_POLYGON: 'draw_polygon',\n  DRAW_POINT: 'draw_point',\n  SIMPLE_SELECT: 'simple_select',\n  DIRECT_SELECT: 'direct_select'\n};\nexport const events = {\n  CREATE: 'draw.create',\n  DELETE: 'draw.delete',\n  UPDATE: 'draw.update',\n  SELECTION_CHANGE: 'draw.selectionchange',\n  MODE_CHANGE: 'draw.modechange',\n  ACTIONABLE: 'draw.actionable',\n  RENDER: 'draw.render',\n  COMBINE_FEATURES: 'draw.combine',\n  UNCOMBINE_FEATURES: 'draw.uncombine'\n};\nexport const updateActions = {\n  MOVE: 'move',\n  CHANGE_PROPERTIES: 'change_properties',\n  CHANGE_COORDINATES: 'change_coordinates'\n};\nexport const meta = {\n  FEATURE: 'feature',\n  MIDPOINT: 'midpoint',\n  VERTEX: 'vertex'\n};\nexport const activeStates = {\n  ACTIVE: 'true',\n  INACTIVE: 'false'\n};\nexport const interactions = ['scrollZoom', 'boxZoom', 'dragRotate', 'dragPan', 'keyboard', 'doubleClickZoom', 'touchZoomRotate'];\nexport const LAT_MIN = -90;\nexport const LAT_RENDERED_MIN = -85;\nexport const LAT_MAX = 90;\nexport const LAT_RENDERED_MAX = 85;\nexport const LNG_MIN = -270;\nexport const LNG_MAX = 270;", "/**\n * Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.\n */\nfunction mapEventToBoundingBox(mapEvent, buffer = 0) {\n  return [[mapEvent.point.x - buffer, mapEvent.point.y - buffer], [mapEvent.point.x + buffer, mapEvent.point.y + buffer]];\n}\nexport default mapEventToBoundingBox;", "function StringSet(items) {\n  this._items = {};\n  this._nums = {};\n  this._length = items ? items.length : 0;\n  if (!items) return;\n  for (let i = 0, l = items.length; i < l; i++) {\n    this.add(items[i]);\n    if (items[i] === undefined) continue;\n    if (typeof items[i] === 'string') this._items[items[i]] = i;else this._nums[items[i]] = i;\n  }\n}\nStringSet.prototype.add = function (x) {\n  if (this.has(x)) return this;\n  this._length++;\n  if (typeof x === 'string') this._items[x] = this._length;else this._nums[x] = this._length;\n  return this;\n};\nStringSet.prototype.delete = function (x) {\n  if (this.has(x) === false) return this;\n  this._length--;\n  delete this._items[x];\n  delete this._nums[x];\n  return this;\n};\nStringSet.prototype.has = function (x) {\n  if (typeof x !== 'string' && typeof x !== 'number') return false;\n  return this._items[x] !== undefined || this._nums[x] !== undefined;\n};\nStringSet.prototype.values = function () {\n  const values = [];\n  Object.keys(this._items).forEach(k => {\n    values.push({\n      k,\n      v: this._items[k]\n    });\n  });\n  Object.keys(this._nums).forEach(k => {\n    values.push({\n      k: JSON.parse(k),\n      v: this._nums[k]\n    });\n  });\n  return values.sort((a, b) => a.v - b.v).map(a => a.k);\n};\nStringSet.prototype.clear = function () {\n  this._length = 0;\n  this._items = {};\n  this._nums = {};\n  return this;\n};\nexport default StringSet;", "import sortFeatures from './sort_features.js';\nimport mapEventToBoundingBox from './map_event_to_bounding_box.js';\nimport * as Constants from '../constants.js';\nimport StringSet from './string_set.js';\nconst META_TYPES = [Constants.meta.FEATURE, Constants.meta.MIDPOINT, Constants.meta.VERTEX];\n\n// Requires either event or bbox\nexport default {\n  click: featuresAtClick,\n  touch: featuresAtTouch\n};\nfunction featuresAtClick(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.clickBuffer);\n}\nfunction featuresAtTouch(event, bbox, ctx) {\n  return featuresAt(event, bbox, ctx, ctx.options.touchBuffer);\n}\nfunction featuresAt(event, bbox, ctx, buffer) {\n  if (ctx.map === null) return [];\n  const box = event ? mapEventToBoundingBox(event, buffer) : bbox;\n  const queryParams = {};\n  if (ctx.options.styles) queryParams.layers = ctx.options.styles.map(s => s.id).filter(id => ctx.map.getLayer(id) != null);\n  const features = ctx.map.queryRenderedFeatures(box, queryParams).filter(feature => META_TYPES.indexOf(feature.properties.meta) !== -1);\n  const featureIds = new StringSet();\n  const uniqueFeatures = [];\n  features.forEach(feature => {\n    const featureId = feature.properties.id;\n    if (featureIds.has(featureId)) return;\n    featureIds.add(featureId);\n    uniqueFeatures.push(feature);\n  });\n  return sortFeatures(uniqueFeatures);\n}", "import featuresAt from './features_at.js';\nimport * as Constants from '../constants.js';\nexport default function getFeatureAtAndSetCursors(event, ctx) {\n  const features = featuresAt.click(event, null, ctx);\n  const classes = {\n    mouse: Constants.cursors.NONE\n  };\n  if (features[0]) {\n    classes.mouse = features[0].properties.active === Constants.activeStates.ACTIVE ? Constants.cursors.MOVE : Constants.cursors.POINTER;\n    classes.feature = features[0].properties.meta;\n  }\n  if (ctx.events.currentModeName().indexOf('draw') !== -1) {\n    classes.mouse = Constants.cursors.ADD;\n  }\n  ctx.ui.queueMapClasses(classes);\n  ctx.ui.updateMapClasses();\n  return features[0];\n}", "export default function (a, b) {\n  const x = a.x - b.x;\n  const y = a.y - b.y;\n  return Math.sqrt(x * x + y * y);\n}", "import euclideanDistance from './euclidean_distance.js';\nconst FINE_TOLERANCE = 4;\nconst GROSS_TOLERANCE = 12;\nconst INTERVAL = 500;\nexport default function isClick(start, end, options = {}) {\n  const fineTolerance = options.fineTolerance != null ? options.fineTolerance : FINE_TOLERANCE;\n  const grossTolerance = options.grossTolerance != null ? options.grossTolerance : GROSS_TOLERANCE;\n  const interval = options.interval != null ? options.interval : INTERVAL;\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n  return moveDistance < fineTolerance || moveDistance < grossTolerance && end.time - start.time < interval;\n}", "import euclideanDistance from './euclidean_distance.js';\nexport const TAP_TOLERANCE = 25;\nexport const TAP_INTERVAL = 250;\nexport default function isTap(start, end, options = {}) {\n  const tolerance = options.tolerance != null ? options.tolerance : TAP_TOLERANCE;\n  const interval = options.interval != null ? options.interval : TAP_INTERVAL;\n  start.point = start.point || end.point;\n  start.time = start.time || end.time;\n  const moveDistance = euclideanDistance(start.point, end.point);\n  return moveDistance < tolerance && end.time - start.time < interval;\n}", "/* @ts-self-types=\"./index.d.ts\" */\nlet urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = '';\n    let i = size | 0;\n    while (i--) {\n      id += alphabet[Math.random() * alphabet.length | 0];\n    }\n    return id;\n  };\n};\nexport let nanoid = (size = 21) => {\n  let id = '';\n  let i = size | 0;\n  while (i--) {\n    id += urlAlphabet[Math.random() * 64 | 0];\n  }\n  return id;\n};", "import { customAlphabet } from 'nanoid/non-secure';\nconst nanoid = customAlphabet('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', 32);\nexport function generateID() {\n  return nanoid();\n}", "import { generateID } from '../lib/id.js';\nimport * as Constants from '../constants.js';\nconst Feature = function (ctx, geojson) {\n  this.ctx = ctx;\n  this.properties = geojson.properties || {};\n  this.coordinates = geojson.geometry.coordinates;\n  this.id = geojson.id || generateID();\n  this.type = geojson.geometry.type;\n};\nFeature.prototype.changed = function () {\n  this.ctx.store.featureChanged(this.id);\n};\nFeature.prototype.incomingCoords = function (coords) {\n  this.setCoordinates(coords);\n};\nFeature.prototype.setCoordinates = function (coords) {\n  this.coordinates = coords;\n  this.changed();\n};\nFeature.prototype.getCoordinates = function () {\n  return JSON.parse(JSON.stringify(this.coordinates));\n};\nFeature.prototype.setProperty = function (property, value) {\n  this.properties[property] = value;\n};\nFeature.prototype.toGeoJSON = function () {\n  return JSON.parse(JSON.stringify({\n    id: this.id,\n    type: Constants.geojsonTypes.FEATURE,\n    properties: this.properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  }));\n};\nFeature.prototype.internal = function (mode) {\n  const properties = {\n    id: this.id,\n    meta: Constants.meta.FEATURE,\n    'meta:type': this.type,\n    active: Constants.activeStates.INACTIVE,\n    mode\n  };\n  if (this.ctx.options.userProperties) {\n    for (const name in this.properties) {\n      properties[`user_${name}`] = this.properties[name];\n    }\n  }\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties,\n    geometry: {\n      coordinates: this.getCoordinates(),\n      type: this.type\n    }\n  };\n};\nexport default Feature;", "import Feature from './feature.js';\nconst Point = function (ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\nPoint.prototype = Object.create(Feature.prototype);\nPoint.prototype.isValid = function () {\n  return typeof this.coordinates[0] === 'number' && typeof this.coordinates[1] === 'number';\n};\nPoint.prototype.updateCoordinate = function (pathOrLng, lngOrLat, lat) {\n  if (arguments.length === 3) {\n    this.coordinates = [lngOrLat, lat];\n  } else {\n    this.coordinates = [pathOrLng, lngOrLat];\n  }\n  this.changed();\n};\nPoint.prototype.getCoordinate = function () {\n  return this.getCoordinates();\n};\nexport default Point;", "import Feature from './feature.js';\nconst LineString = function (ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n};\nLineString.prototype = Object.create(Feature.prototype);\nLineString.prototype.isValid = function () {\n  return this.coordinates.length > 1;\n};\nLineString.prototype.addCoordinate = function (path, lng, lat) {\n  this.changed();\n  const id = parseInt(path, 10);\n  this.coordinates.splice(id, 0, [lng, lat]);\n};\nLineString.prototype.getCoordinate = function (path) {\n  const id = parseInt(path, 10);\n  return JSON.parse(JSON.stringify(this.coordinates[id]));\n};\nLineString.prototype.removeCoordinate = function (path) {\n  this.changed();\n  this.coordinates.splice(parseInt(path, 10), 1);\n};\nLineString.prototype.updateCoordinate = function (path, lng, lat) {\n  const id = parseInt(path, 10);\n  this.coordinates[id] = [lng, lat];\n  this.changed();\n};\nexport default LineString;", "import Feature from './feature.js';\nconst Polygon = function (ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  this.coordinates = this.coordinates.map(ring => ring.slice(0, -1));\n};\nPolygon.prototype = Object.create(Feature.prototype);\nPolygon.prototype.isValid = function () {\n  if (this.coordinates.length === 0) return false;\n  return this.coordinates.every(ring => ring.length > 2);\n};\n\n// Expects valid geoJSON polygon geometry: first and last positions must be equivalent.\nPolygon.prototype.incomingCoords = function (coords) {\n  this.coordinates = coords.map(ring => ring.slice(0, -1));\n  this.changed();\n};\n\n// Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.\nPolygon.prototype.setCoordinates = function (coords) {\n  this.coordinates = coords;\n  this.changed();\n};\nPolygon.prototype.addCoordinate = function (path, lng, lat) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  ring.splice(ids[1], 0, [lng, lat]);\n};\nPolygon.prototype.removeCoordinate = function (path) {\n  this.changed();\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  if (ring) {\n    ring.splice(ids[1], 1);\n    if (ring.length < 3) {\n      this.coordinates.splice(ids[0], 1);\n    }\n  }\n};\nPolygon.prototype.getCoordinate = function (path) {\n  const ids = path.split('.').map(x => parseInt(x, 10));\n  const ring = this.coordinates[ids[0]];\n  return JSON.parse(JSON.stringify(ring[ids[1]]));\n};\nPolygon.prototype.getCoordinates = function () {\n  return this.coordinates.map(coords => coords.concat([coords[0]]));\n};\nPolygon.prototype.updateCoordinate = function (path, lng, lat) {\n  this.changed();\n  const parts = path.split('.');\n  const ringId = parseInt(parts[0], 10);\n  const coordId = parseInt(parts[1], 10);\n  if (this.coordinates[ringId] === undefined) {\n    this.coordinates[ringId] = [];\n  }\n  this.coordinates[ringId][coordId] = [lng, lat];\n};\nexport default Polygon;", "import { generateID } from '../lib/id.js';\nimport Feature from './feature.js';\nimport * as Constants from '../constants.js';\nimport MultiPoint from './point.js';\nimport MultiLineString from './line_string.js';\nimport MultiPolygon from './polygon.js';\nconst models = {\n  MultiPoint,\n  MultiLineString,\n  MultiPolygon\n};\nconst takeAction = (features, action, path, lng, lat) => {\n  const parts = path.split('.');\n  const idx = parseInt(parts[0], 10);\n  const tail = !parts[1] ? null : parts.slice(1).join('.');\n  return features[idx][action](tail, lng, lat);\n};\nconst MultiFeature = function (ctx, geojson) {\n  Feature.call(this, ctx, geojson);\n  delete this.coordinates;\n  this.model = models[geojson.geometry.type];\n  if (this.model === undefined) throw new TypeError(`${geojson.geometry.type} is not a valid type`);\n  this.features = this._coordinatesToFeatures(geojson.geometry.coordinates);\n};\nMultiFeature.prototype = Object.create(Feature.prototype);\nMultiFeature.prototype._coordinatesToFeatures = function (coordinates) {\n  const Model = this.model.bind(this);\n  return coordinates.map(coords => new Model(this.ctx, {\n    id: generateID(),\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      coordinates: coords,\n      type: this.type.replace('Multi', '')\n    }\n  }));\n};\nMultiFeature.prototype.isValid = function () {\n  return this.features.every(f => f.isValid());\n};\nMultiFeature.prototype.setCoordinates = function (coords) {\n  this.features = this._coordinatesToFeatures(coords);\n  this.changed();\n};\nMultiFeature.prototype.getCoordinate = function (path) {\n  return takeAction(this.features, 'getCoordinate', path);\n};\nMultiFeature.prototype.getCoordinates = function () {\n  return JSON.parse(JSON.stringify(this.features.map(f => {\n    if (f.type === Constants.geojsonTypes.POLYGON) return f.getCoordinates();\n    return f.coordinates;\n  })));\n};\nMultiFeature.prototype.updateCoordinate = function (path, lng, lat) {\n  takeAction(this.features, 'updateCoordinate', path, lng, lat);\n  this.changed();\n};\nMultiFeature.prototype.addCoordinate = function (path, lng, lat) {\n  takeAction(this.features, 'addCoordinate', path, lng, lat);\n  this.changed();\n};\nMultiFeature.prototype.removeCoordinate = function (path) {\n  takeAction(this.features, 'removeCoordinate', path);\n  this.changed();\n};\nMultiFeature.prototype.getFeatures = function () {\n  return this.features;\n};\nexport default MultiFeature;", "import * as Constants from '../constants.js';\nimport featuresAt from '../lib/features_at.js';\nimport Point from '../feature_types/point.js';\nimport LineString from '../feature_types/line_string.js';\nimport Polygon from '../feature_types/polygon.js';\nimport MultiFeature from '../feature_types/multi_feature.js';\nexport default function ModeInterface(ctx) {\n  this.map = ctx.map;\n  this.drawConfig = JSON.parse(JSON.stringify(ctx.options || {}));\n  this._ctx = ctx;\n}\n\n/**\n * Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n */\nModeInterface.prototype.setSelected = function (features) {\n  return this._ctx.store.setSelected(features);\n};\n\n/**\n * Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', feature_id: 'string'}\n */\nModeInterface.prototype.setSelectedCoordinates = function (coords) {\n  this._ctx.store.setSelectedCoordinates(coords);\n  coords.reduce((m, c) => {\n    if (m[c.feature_id] === undefined) {\n      m[c.feature_id] = true;\n      this._ctx.store.get(c.feature_id).changed();\n    }\n    return m;\n  }, {});\n};\n\n/**\n * Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}\n */\nModeInterface.prototype.getSelected = function () {\n  return this._ctx.store.getSelected();\n};\n\n/**\n * Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}\n */\nModeInterface.prototype.getSelectedIds = function () {\n  return this._ctx.store.getSelectedIds();\n};\n\n/**\n * Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}\n */\nModeInterface.prototype.isSelected = function (id) {\n  return this._ctx.store.isSelected(id);\n};\n\n/**\n * Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}\n */\nModeInterface.prototype.getFeature = function (id) {\n  return this._ctx.store.get(id);\n};\n\n/**\n * Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id\n */\nModeInterface.prototype.select = function (id) {\n  return this._ctx.store.select(id);\n};\n\n/**\n * Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id\n */\nModeInterface.prototype.deselect = function (id) {\n  return this._ctx.store.deselect(id);\n};\n\n/**\n * Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id\n */\nModeInterface.prototype.deleteFeature = function (id, opts = {}) {\n  return this._ctx.store.delete(id, opts);\n};\n\n/**\n * Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add\n */\nModeInterface.prototype.addFeature = function (feature, opts = {}) {\n  return this._ctx.store.add(feature, opts);\n};\n\n/**\n * Clear all selected features\n */\nModeInterface.prototype.clearSelectedFeatures = function () {\n  return this._ctx.store.clearSelected();\n};\n\n/**\n * Clear all selected coordinates\n */\nModeInterface.prototype.clearSelectedCoordinates = function () {\n  return this._ctx.store.clearSelectedCoordinates();\n};\n\n/**\n * Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions\n */\nModeInterface.prototype.setActionableState = function (actions = {}) {\n  const newSet = {\n    trash: actions.trash || false,\n    combineFeatures: actions.combineFeatures || false,\n    uncombineFeatures: actions.uncombineFeatures || false\n  };\n  return this._ctx.events.actionable(newSet);\n};\n\n/**\n * Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.\n */\nModeInterface.prototype.changeMode = function (mode, opts = {}, eventOpts = {}) {\n  return this._ctx.events.changeMode(mode, opts, eventOpts);\n};\n\n/**\n * Fire a map event\n * @name this.fire\n * @param {String} eventName - the event name.\n * @param {Object} eventData - the event data object.\n */\nModeInterface.prototype.fire = function (eventName, eventData) {\n  return this._ctx.events.fire(eventName, eventData);\n};\n\n/**\n * Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts\n */\nModeInterface.prototype.updateUIClasses = function (opts) {\n  return this._ctx.ui.queueMapClasses(opts);\n};\n\n/**\n * If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive\n */\nModeInterface.prototype.activateUIButton = function (name) {\n  return this._ctx.ui.setActiveButton(name);\n};\n\n/**\n * Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click\n */\nModeInterface.prototype.featuresAt = function (event, bbox, bufferType = 'click') {\n  if (bufferType !== 'click' && bufferType !== 'touch') throw new Error('invalid buffer type');\n  return featuresAt[bufferType](event, bbox, this._ctx);\n};\n\n/**\n * Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}\n */\nModeInterface.prototype.newFeature = function (geojson) {\n  const type = geojson.geometry.type;\n  if (type === Constants.geojsonTypes.POINT) return new Point(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.LINE_STRING) return new LineString(this._ctx, geojson);\n  if (type === Constants.geojsonTypes.POLYGON) return new Polygon(this._ctx, geojson);\n  return new MultiFeature(this._ctx, geojson);\n};\n\n/**\n * Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}\n */\nModeInterface.prototype.isInstanceOf = function (type, feature) {\n  if (type === Constants.geojsonTypes.POINT) return feature instanceof Point;\n  if (type === Constants.geojsonTypes.LINE_STRING) return feature instanceof LineString;\n  if (type === Constants.geojsonTypes.POLYGON) return feature instanceof Polygon;\n  if (type === 'MultiFeature') return feature instanceof MultiFeature;\n  throw new Error(`Unknown feature class: ${type}`);\n};\n\n/**\n * Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id\n */\nModeInterface.prototype.doRender = function (id) {\n  return this._ctx.store.featureChanged(id);\n};", "import ModeInterface from './mode_interface_accessors.js';\nexport default ModeInterface;\n\n/**\n * Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions\n */\nModeInterface.prototype.onSetup = function () {};\n\n/**\n * Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onDrag = function () {};\n\n/**\n * Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onClick = function () {};\n\n/**\n * Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseMove = function () {};\n\n/**\n * Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseDown = function () {};\n\n/**\n * Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseUp = function () {};\n\n/**\n * Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onMouseOut = function () {};\n\n/**\n * Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyUp = function () {};\n\n/**\n * Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onKeyDown = function () {};\n\n/**\n * Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchStart = function () {};\n\n/**\n * Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchMove = function () {};\n\n/**\n * Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTouchEnd = function () {};\n\n/**\n * Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event\n */\nModeInterface.prototype.onTap = function () {};\n\n/**\n * Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onStop = function () {};\n\n/**\n * Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onTrash = function () {};\n\n/**\n * Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onCombineFeature = function () {};\n\n/**\n * Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup\n */\nModeInterface.prototype.onUncombineFeature = function () {};\n\n/**\n * Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map\n */\nModeInterface.prototype.toDisplayFeatures = function () {\n  throw new Error('You must overwrite toDisplayFeatures');\n};", "import ModeInterface from './mode_interface.js';\nconst eventMapper = {\n  drag: 'onDrag',\n  click: 'onClick',\n  mousemove: 'onMouseMove',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseout: 'onMouseOut',\n  keyup: 'onKeyUp',\n  keydown: 'onKeyDown',\n  touchstart: 'onTouchStart',\n  touchmove: 'onTouchMove',\n  touchend: 'onTouchEnd',\n  tap: 'onTap'\n};\nconst eventKeys = Object.keys(eventMapper);\nexport default function (modeObject) {\n  const modeObjectKeys = Object.keys(modeObject);\n  return function (ctx, startOpts = {}) {\n    let state = {};\n    const mode = modeObjectKeys.reduce((m, k) => {\n      m[k] = modeObject[k];\n      return m;\n    }, new ModeInterface(ctx));\n    function wrapper(eh) {\n      return e => mode[eh](state, e);\n    }\n    return {\n      start() {\n        state = mode.onSetup(startOpts); // this should set ui buttons\n\n        // Adds event handlers for all event options\n        // add sets the selector to false for all\n        // handlers that are not present in the mode\n        // to reduce on render calls for functions that\n        // have no logic\n        eventKeys.forEach(key => {\n          const modeHandler = eventMapper[key];\n          let selector = () => false;\n          if (modeObject[modeHandler]) {\n            selector = () => true;\n          }\n          this.on(key, selector, wrapper(modeHandler));\n        });\n      },\n      stop() {\n        mode.onStop(state);\n      },\n      trash() {\n        mode.onTrash(state);\n      },\n      combineFeatures() {\n        mode.onCombineFeatures(state);\n      },\n      uncombineFeatures() {\n        mode.onUncombineFeatures(state);\n      },\n      render(geojson, push) {\n        mode.toDisplayFeatures(state, geojson, push);\n      }\n    };\n  };\n}", "import setupModeHandler from './lib/mode_handler.js';\nimport getFeaturesAndSetCursor from './lib/get_features_and_set_cursor.js';\nimport featuresAt from './lib/features_at.js';\nimport isClick from './lib/is_click.js';\nimport isTap from './lib/is_tap.js';\nimport * as Constants from './constants.js';\nimport objectToMode from './modes/object_to_mode.js';\nexport default function (ctx) {\n  const modes = Object.keys(ctx.options.modes).reduce((m, k) => {\n    m[k] = objectToMode(ctx.options.modes[k]);\n    return m;\n  }, {});\n  let mouseDownInfo = {};\n  let touchStartInfo = {};\n  const events = {};\n  let currentModeName = null;\n  let currentMode = null;\n  events.drag = function (event, isDrag) {\n    if (isDrag({\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      ctx.ui.queueMapClasses({\n        mouse: Constants.cursors.DRAG\n      });\n      currentMode.drag(event);\n    } else {\n      event.originalEvent.stopPropagation();\n    }\n  };\n  events.mousedrag = function (event) {\n    events.drag(event, endInfo => !isClick(mouseDownInfo, endInfo));\n  };\n  events.touchdrag = function (event) {\n    events.drag(event, endInfo => !isTap(touchStartInfo, endInfo));\n  };\n  events.mousemove = function (event) {\n    const button = event.originalEvent.buttons !== undefined ? event.originalEvent.buttons : event.originalEvent.which;\n    if (button === 1) {\n      return events.mousedrag(event);\n    }\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousemove(event);\n  };\n  events.mousedown = function (event) {\n    mouseDownInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    currentMode.mousedown(event);\n  };\n  events.mouseup = function (event) {\n    const target = getFeaturesAndSetCursor(event, ctx);\n    event.featureTarget = target;\n    if (isClick(mouseDownInfo, {\n      point: event.point,\n      time: new Date().getTime()\n    })) {\n      currentMode.click(event);\n    } else {\n      currentMode.mouseup(event);\n    }\n  };\n  events.mouseout = function (event) {\n    currentMode.mouseout(event);\n  };\n  events.touchstart = function (event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n    touchStartInfo = {\n      time: new Date().getTime(),\n      point: event.point\n    };\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    currentMode.touchstart(event);\n  };\n  events.touchmove = function (event) {\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n    currentMode.touchmove(event);\n    return events.touchdrag(event);\n  };\n  events.touchend = function (event) {\n    // Prevent emulated mouse events because we will fully handle the touch here.\n    // This does not stop the touch events from propogating to mapbox though.\n    event.originalEvent.preventDefault();\n    if (!ctx.options.touchEnabled) {\n      return;\n    }\n    const target = featuresAt.touch(event, null, ctx)[0];\n    event.featureTarget = target;\n    if (isTap(touchStartInfo, {\n      time: new Date().getTime(),\n      point: event.point\n    })) {\n      currentMode.tap(event);\n    } else {\n      currentMode.touchend(event);\n    }\n  };\n\n  // 8 - Backspace\n  // 46 - Delete\n  const isKeyModeValid = code => !(code === 8 || code === 46 || code >= 48 && code <= 57);\n  events.keydown = function (event) {\n    const isMapElement = (event.srcElement || event.target).classList.contains(Constants.classes.CANVAS);\n    if (!isMapElement) return; // we only handle events on the map\n\n    if ((event.keyCode === 8 || event.keyCode === 46) && ctx.options.controls.trash) {\n      event.preventDefault();\n      currentMode.trash();\n    } else if (isKeyModeValid(event.keyCode)) {\n      currentMode.keydown(event);\n    } else if (event.keyCode === 49 && ctx.options.controls.point) {\n      changeMode(Constants.modes.DRAW_POINT);\n    } else if (event.keyCode === 50 && ctx.options.controls.line_string) {\n      changeMode(Constants.modes.DRAW_LINE_STRING);\n    } else if (event.keyCode === 51 && ctx.options.controls.polygon) {\n      changeMode(Constants.modes.DRAW_POLYGON);\n    }\n  };\n  events.keyup = function (event) {\n    if (isKeyModeValid(event.keyCode)) {\n      currentMode.keyup(event);\n    }\n  };\n  events.zoomend = function () {\n    ctx.store.changeZoom();\n  };\n  events.data = function (event) {\n    if (event.dataType === 'style') {\n      const {\n        setup,\n        map,\n        options,\n        store\n      } = ctx;\n      const hasLayers = options.styles.some(style => map.getLayer(style.id));\n      if (!hasLayers) {\n        setup.addLayers();\n        store.setDirty();\n        store.render();\n      }\n    }\n  };\n  function changeMode(modename, nextModeOptions, eventOptions = {}) {\n    currentMode.stop();\n    const modebuilder = modes[modename];\n    if (modebuilder === undefined) {\n      throw new Error(`${modename} is not valid`);\n    }\n    currentModeName = modename;\n    const mode = modebuilder(ctx, nextModeOptions);\n    currentMode = setupModeHandler(mode, ctx);\n    if (!eventOptions.silent) {\n      ctx.map.fire(Constants.events.MODE_CHANGE, {\n        mode: modename\n      });\n    }\n    ctx.store.setDirty();\n    ctx.store.render();\n  }\n  const actionState = {\n    trash: false,\n    combineFeatures: false,\n    uncombineFeatures: false\n  };\n  function actionable(actions) {\n    let changed = false;\n    Object.keys(actions).forEach(action => {\n      if (actionState[action] === undefined) throw new Error('Invalid action type');\n      if (actionState[action] !== actions[action]) changed = true;\n      actionState[action] = actions[action];\n    });\n    if (changed) ctx.map.fire(Constants.events.ACTIONABLE, {\n      actions: actionState\n    });\n  }\n  const api = {\n    start() {\n      currentModeName = ctx.options.defaultMode;\n      currentMode = setupModeHandler(modes[currentModeName](ctx), ctx);\n    },\n    changeMode,\n    actionable,\n    currentModeName() {\n      return currentModeName;\n    },\n    currentModeRender(geojson, push) {\n      return currentMode.render(geojson, push);\n    },\n    fire(eventName, eventData) {\n      if (!ctx.map) return;\n      ctx.map.fire(eventName, eventData);\n    },\n    addEventListeners() {\n      ctx.map.on('mousemove', events.mousemove);\n      ctx.map.on('mousedown', events.mousedown);\n      ctx.map.on('mouseup', events.mouseup);\n      ctx.map.on('data', events.data);\n      ctx.map.on('touchmove', events.touchmove);\n      ctx.map.on('touchstart', events.touchstart);\n      ctx.map.on('touchend', events.touchend);\n      ctx.container.addEventListener('mouseout', events.mouseout);\n      if (ctx.options.keybindings) {\n        ctx.container.addEventListener('keydown', events.keydown);\n        ctx.container.addEventListener('keyup', events.keyup);\n      }\n    },\n    removeEventListeners() {\n      ctx.map.off('mousemove', events.mousemove);\n      ctx.map.off('mousedown', events.mousedown);\n      ctx.map.off('mouseup', events.mouseup);\n      ctx.map.off('data', events.data);\n      ctx.map.off('touchmove', events.touchmove);\n      ctx.map.off('touchstart', events.touchstart);\n      ctx.map.off('touchend', events.touchend);\n      ctx.container.removeEventListener('mouseout', events.mouseout);\n      if (ctx.options.keybindings) {\n        ctx.container.removeEventListener('keydown', events.keydown);\n        ctx.container.removeEventListener('keyup', events.keyup);\n      }\n    },\n    trash(options) {\n      currentMode.trash(options);\n    },\n    combineFeatures() {\n      currentMode.combineFeatures();\n    },\n    uncombineFeatures() {\n      currentMode.uncombineFeatures();\n    },\n    getMode() {\n      return currentModeName;\n    }\n  };\n  return api;\n}", "/**\n * Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}\n */\nfunction toDenseArray(x) {\n  return [].concat(x).filter(y => y !== undefined);\n}\nexport default toDenseArray;", "import * as Constants from './constants.js';\nexport default function render() {\n  // eslint-disable-next-line no-invalid-this\n  const store = this;\n  const mapExists = store.ctx.map && store.ctx.map.getSource(Constants.sources.HOT) !== undefined;\n  if (!mapExists) return cleanup();\n  const mode = store.ctx.events.currentModeName();\n  store.ctx.ui.queueMapClasses({\n    mode\n  });\n  let newHotIds = [];\n  let newColdIds = [];\n  if (store.isDirty) {\n    newColdIds = store.getAllIds();\n  } else {\n    newHotIds = store.getChangedIds().filter(id => store.get(id) !== undefined);\n    newColdIds = store.sources.hot.filter(geojson => geojson.properties.id && newHotIds.indexOf(geojson.properties.id) === -1 && store.get(geojson.properties.id) !== undefined).map(geojson => geojson.properties.id);\n  }\n  store.sources.hot = [];\n  const lastColdCount = store.sources.cold.length;\n  store.sources.cold = store.isDirty ? [] : store.sources.cold.filter(geojson => {\n    const id = geojson.properties.id || geojson.properties.parent;\n    return newHotIds.indexOf(id) === -1;\n  });\n  const coldChanged = lastColdCount !== store.sources.cold.length || newColdIds.length > 0;\n  newHotIds.forEach(id => renderFeature(id, 'hot'));\n  newColdIds.forEach(id => renderFeature(id, 'cold'));\n  function renderFeature(id, source) {\n    const feature = store.get(id);\n    const featureInternal = feature.internal(mode);\n    store.ctx.events.currentModeRender(featureInternal, geojson => {\n      geojson.properties.mode = mode;\n      store.sources[source].push(geojson);\n    });\n  }\n  if (coldChanged) {\n    store.ctx.map.getSource(Constants.sources.COLD).setData({\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: store.sources.cold\n    });\n  }\n  store.ctx.map.getSource(Constants.sources.HOT).setData({\n    type: Constants.geojsonTypes.FEATURE_COLLECTION,\n    features: store.sources.hot\n  });\n  cleanup();\n  function cleanup() {\n    store.isDirty = false;\n    store.clearChangedIds();\n  }\n}", "import toDenseArray from './lib/to_dense_array.js';\nimport StringSet from './lib/string_set.js';\nimport render from './render.js';\nimport * as Constants from './constants.js';\nexport default function Store(ctx) {\n  this._features = {};\n  this._featureIds = new StringSet();\n  this._selectedFeatureIds = new StringSet();\n  this._selectedCoordinates = [];\n  this._changedFeatureIds = new StringSet();\n  this._emitSelectionChange = false;\n  this._mapInitialConfig = {};\n  this.ctx = ctx;\n  this.sources = {\n    hot: [],\n    cold: []\n  };\n\n  // Deduplicate requests to render and tie them to animation frames.\n  let renderRequest;\n  this.render = () => {\n    if (!renderRequest) {\n      renderRequest = requestAnimationFrame(() => {\n        renderRequest = null;\n        render.call(this);\n\n        // Fire deduplicated selection change event\n        if (this._emitSelectionChange) {\n          this.ctx.events.fire(Constants.events.SELECTION_CHANGE, {\n            features: this.getSelected().map(feature => feature.toGeoJSON()),\n            points: this.getSelectedCoordinates().map(coordinate => ({\n              type: Constants.geojsonTypes.FEATURE,\n              properties: {},\n              geometry: {\n                type: Constants.geojsonTypes.POINT,\n                coordinates: coordinate.coordinates\n              }\n            }))\n          });\n          this._emitSelectionChange = false;\n        }\n\n        // Fire render event\n        this.ctx.events.fire(Constants.events.RENDER, {});\n      });\n    }\n  };\n  this.isDirty = false;\n}\n\n/**\n * Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch\n */\nStore.prototype.createRenderBatch = function () {\n  const holdRender = this.render;\n  let numRenders = 0;\n  this.render = function () {\n    numRenders++;\n  };\n  return () => {\n    this.render = holdRender;\n    if (numRenders > 0) {\n      this.render();\n    }\n  };\n};\n\n/**\n * Sets the store's state to dirty.\n * @return {Store} this\n */\nStore.prototype.setDirty = function () {\n  this.isDirty = true;\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureCreated = function (featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    const feature = this.get(featureId);\n    this.ctx.events.fire(Constants.events.CREATE, {\n      features: [feature.toGeoJSON()]\n    });\n  }\n  return this;\n};\n\n/**\n * Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this\n */\nStore.prototype.featureChanged = function (featureId, options = {}) {\n  this._changedFeatureIds.add(featureId);\n  const silent = options.silent != null ? options.silent : this.ctx.options.suppressAPIEvents;\n  if (silent !== true) {\n    this.ctx.events.fire(Constants.events.UPDATE, {\n      action: options.action ? options.action : Constants.updateActions.CHANGE_COORDINATES,\n      features: [this.get(featureId).toGeoJSON()]\n    });\n  }\n  return this;\n};\n\n/**\n * Gets the ids of all features currently in changed state.\n * @return {Store} this\n */\nStore.prototype.getChangedIds = function () {\n  return this._changedFeatureIds.values();\n};\n\n/**\n * Sets all features to unchanged state.\n * @return {Store} this\n */\nStore.prototype.clearChangedIds = function () {\n  this._changedFeatureIds.clear();\n  return this;\n};\n\n/**\n * Gets the ids of all features in the store.\n * @return {Store} this\n */\nStore.prototype.getAllIds = function () {\n  return this._featureIds.values();\n};\n\n/**\n * Adds a feature to the store.\n * @param {Object} feature\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n *\n * @return {Store} this\n */\nStore.prototype.add = function (feature, options = {}) {\n  this._features[feature.id] = feature;\n  this._featureIds.add(feature.id);\n  this.featureCreated(feature.id, {\n    silent: options.silent\n  });\n  return this;\n};\n\n/**\n * Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.delete = function (featureIds, options = {}) {\n  const deletedFeaturesToEmit = [];\n  toDenseArray(featureIds).forEach(id => {\n    if (!this._featureIds.has(id)) return;\n    this._featureIds.delete(id);\n    this._selectedFeatureIds.delete(id);\n    if (!options.silent) {\n      if (deletedFeaturesToEmit.indexOf(this._features[id]) === -1) {\n        deletedFeaturesToEmit.push(this._features[id].toGeoJSON());\n      }\n    }\n    delete this._features[id];\n    this.isDirty = true;\n  });\n  if (deletedFeaturesToEmit.length) {\n    this.ctx.events.fire(Constants.events.DELETE, {\n      features: deletedFeaturesToEmit\n    });\n  }\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature\n */\nStore.prototype.get = function (id) {\n  return this._features[id];\n};\n\n/**\n * Returns all features in the store.\n * @return {Array<Object>}\n */\nStore.prototype.getAll = function () {\n  return Object.keys(this._features).map(id => this._features[id]);\n};\n\n/**\n * Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.select = function (featureIds, options = {}) {\n  toDenseArray(featureIds).forEach(id => {\n    if (this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.add(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  return this;\n};\n\n/**\n * Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.deselect = function (featureIds, options = {}) {\n  toDenseArray(featureIds).forEach(id => {\n    if (!this._selectedFeatureIds.has(id)) return;\n    this._selectedFeatureIds.delete(id);\n    this._changedFeatureIds.add(id);\n    if (!options.silent) {\n      this._emitSelectionChange = true;\n    }\n  });\n  refreshSelectedCoordinates(this, options);\n  return this;\n};\n\n/**\n * Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.clearSelected = function (options = {}) {\n  this.deselect(this._selectedFeatureIds.values(), {\n    silent: options.silent\n  });\n  return this;\n};\n\n/**\n * Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this\n */\nStore.prototype.setSelected = function (featureIds, options = {}) {\n  featureIds = toDenseArray(featureIds);\n\n  // Deselect any features not in the new selection\n  this.deselect(this._selectedFeatureIds.values().filter(id => featureIds.indexOf(id) === -1), {\n    silent: options.silent\n  });\n\n  // Select any features in the new selection that were not already selected\n  this.select(featureIds.filter(id => !this._selectedFeatureIds.has(id)), {\n    silent: options.silent\n  });\n  return this;\n};\n\n/**\n * Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this\n */\nStore.prototype.setSelectedCoordinates = function (coordinates) {\n  this._selectedCoordinates = coordinates;\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this\n */\nStore.prototype.clearSelectedCoordinates = function () {\n  this._selectedCoordinates = [];\n  this._emitSelectionChange = true;\n  return this;\n};\n\n/**\n * Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.\n */\nStore.prototype.getSelectedIds = function () {\n  return this._selectedFeatureIds.values();\n};\n\n/**\n * Returns features in the current selection.\n * @return {Array<Object>} Selected features.\n */\nStore.prototype.getSelected = function () {\n  return this.getSelectedIds().map(id => this.get(id));\n};\n\n/**\n * Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.\n */\nStore.prototype.getSelectedCoordinates = function () {\n  const selected = this._selectedCoordinates.map(coordinate => {\n    const feature = this.get(coordinate.feature_id);\n    return {\n      coordinates: feature.getCoordinate(coordinate.coord_path)\n    };\n  });\n  return selected;\n};\n\n/**\n * Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.\n */\nStore.prototype.isSelected = function (featureId) {\n  return this._selectedFeatureIds.has(featureId);\n};\n\n/**\n * Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n*/\nStore.prototype.setFeatureProperty = function (featureId, property, value, options = {}) {\n  this.get(featureId).setProperty(property, value);\n  this.featureChanged(featureId, {\n    silent: options.silent,\n    action: Constants.updateActions.CHANGE_PROPERTIES\n  });\n};\nfunction refreshSelectedCoordinates(store, options = {}) {\n  const newSelectedCoordinates = store._selectedCoordinates.filter(point => store._selectedFeatureIds.has(point.feature_id));\n  if (store._selectedCoordinates.length !== newSelectedCoordinates.length && !options.silent) {\n    store._emitSelectionChange = true;\n  }\n  store._selectedCoordinates = newSelectedCoordinates;\n}\n\n/**\n * Stores the initial config for a map, so that we can set it again after we're done.\n*/\nStore.prototype.storeMapConfig = function () {\n  Constants.interactions.forEach(interaction => {\n    const interactionSet = this.ctx.map[interaction];\n    if (interactionSet) {\n      this._mapInitialConfig[interaction] = this.ctx.map[interaction].isEnabled();\n    }\n  });\n};\n\n/**\n * Restores the initial config for a map, ensuring all is well.\n*/\nStore.prototype.restoreMapConfig = function () {\n  Object.keys(this._mapInitialConfig).forEach(key => {\n    const value = this._mapInitialConfig[key];\n    if (value) {\n      this.ctx.map[key].enable();\n    } else {\n      this.ctx.map[key].disable();\n    }\n  });\n};\n\n/**\n * Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)\n*/\nStore.prototype.getInitialConfigValue = function (interaction) {\n  if (this._mapInitialConfig[interaction] !== undefined) {\n    return this._mapInitialConfig[interaction];\n  } else {\n    // This needs to be set to whatever the default is for that interaction\n    // It seems to be true for all cases currently, so let's send back `true`.\n    return true;\n  }\n};", "import * as Constants from './constants.js';\nconst classTypes = ['mode', 'feature', 'mouse'];\nexport default function (ctx) {\n  const buttonElements = {};\n  let activeButton = null;\n  let currentMapClasses = {\n    mode: null,\n    // e.g. mode-direct_select\n    feature: null,\n    // e.g. feature-vertex\n    mouse: null // e.g. mouse-move\n  };\n  let nextMapClasses = {\n    mode: null,\n    feature: null,\n    mouse: null\n  };\n  function clearMapClasses() {\n    queueMapClasses({\n      mode: null,\n      feature: null,\n      mouse: null\n    });\n    updateMapClasses();\n  }\n  function queueMapClasses(options) {\n    nextMapClasses = Object.assign(nextMapClasses, options);\n  }\n  function updateMapClasses() {\n    if (!ctx.container) return;\n    const classesToRemove = [];\n    const classesToAdd = [];\n    classTypes.forEach(type => {\n      if (nextMapClasses[type] === currentMapClasses[type]) return;\n      classesToRemove.push(`${type}-${currentMapClasses[type]}`);\n      if (nextMapClasses[type] !== null) {\n        classesToAdd.push(`${type}-${nextMapClasses[type]}`);\n      }\n    });\n    if (classesToRemove.length > 0) {\n      ctx.container.classList.remove(...classesToRemove);\n    }\n    if (classesToAdd.length > 0) {\n      ctx.container.classList.add(...classesToAdd);\n    }\n    currentMapClasses = Object.assign(currentMapClasses, nextMapClasses);\n  }\n  function createControlButton(id, options = {}) {\n    const button = document.createElement('button');\n    button.className = `${Constants.classes.CONTROL_BUTTON} ${options.className}`;\n    button.setAttribute('title', options.title);\n    options.container.appendChild(button);\n    button.addEventListener('click', e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const clickedButton = e.target;\n      if (clickedButton === activeButton) {\n        deactivateButtons();\n        options.onDeactivate();\n        return;\n      }\n      setActiveButton(id);\n      options.onActivate();\n    }, true);\n    return button;\n  }\n  function deactivateButtons() {\n    if (!activeButton) return;\n    activeButton.classList.remove(Constants.classes.ACTIVE_BUTTON);\n    activeButton = null;\n  }\n  function setActiveButton(id) {\n    deactivateButtons();\n    const button = buttonElements[id];\n    if (!button) return;\n    if (button && id !== 'trash') {\n      button.classList.add(Constants.classes.ACTIVE_BUTTON);\n      activeButton = button;\n    }\n  }\n  function addButtons() {\n    const controls = ctx.options.controls;\n    const controlGroup = document.createElement('div');\n    controlGroup.className = `${Constants.classes.CONTROL_GROUP} ${Constants.classes.CONTROL_BASE}`;\n    if (!controls) return controlGroup;\n    if (controls[Constants.types.LINE]) {\n      buttonElements[Constants.types.LINE] = createControlButton(Constants.types.LINE, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_LINE,\n        title: `LineString tool ${ctx.options.keybindings ? '(l)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_LINE_STRING),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n    if (controls[Constants.types.POLYGON]) {\n      buttonElements[Constants.types.POLYGON] = createControlButton(Constants.types.POLYGON, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POLYGON,\n        title: `Polygon tool ${ctx.options.keybindings ? '(p)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POLYGON),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n    if (controls[Constants.types.POINT]) {\n      buttonElements[Constants.types.POINT] = createControlButton(Constants.types.POINT, {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_POINT,\n        title: `Marker tool ${ctx.options.keybindings ? '(m)' : ''}`,\n        onActivate: () => ctx.events.changeMode(Constants.modes.DRAW_POINT),\n        onDeactivate: () => ctx.events.trash()\n      });\n    }\n    if (controls.trash) {\n      buttonElements.trash = createControlButton('trash', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_TRASH,\n        title: 'Delete',\n        onActivate: () => {\n          ctx.events.trash();\n        }\n      });\n    }\n    if (controls.combine_features) {\n      buttonElements.combine_features = createControlButton('combineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_COMBINE_FEATURES,\n        title: 'Combine',\n        onActivate: () => {\n          ctx.events.combineFeatures();\n        }\n      });\n    }\n    if (controls.uncombine_features) {\n      buttonElements.uncombine_features = createControlButton('uncombineFeatures', {\n        container: controlGroup,\n        className: Constants.classes.CONTROL_BUTTON_UNCOMBINE_FEATURES,\n        title: 'Uncombine',\n        onActivate: () => {\n          ctx.events.uncombineFeatures();\n        }\n      });\n    }\n    return controlGroup;\n  }\n  function removeButtons() {\n    Object.keys(buttonElements).forEach(buttonId => {\n      const button = buttonElements[buttonId];\n      if (button.parentNode) {\n        button.parentNode.removeChild(button);\n      }\n      delete buttonElements[buttonId];\n    });\n  }\n  return {\n    setActiveButton,\n    queueMapClasses,\n    updateMapClasses,\n    clearMapClasses,\n    addButtons,\n    removeButtons\n  };\n}", "import events from './events.js';\nimport Store from './store.js';\nimport ui from './ui.js';\nimport * as Constants from './constants.js';\nexport default function (ctx) {\n  let controlContainer = null;\n  let mapLoadedInterval = null;\n  const setup = {\n    onRemove() {\n      // Stop connect attempt in the event that control is removed before map is loaded\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.removeLayers();\n      ctx.store.restoreMapConfig();\n      ctx.ui.removeButtons();\n      ctx.events.removeEventListeners();\n      ctx.ui.clearMapClasses();\n      if (ctx.boxZoomInitial) ctx.map.boxZoom.enable();\n      ctx.map = null;\n      ctx.container = null;\n      ctx.store = null;\n      if (controlContainer && controlContainer.parentNode) controlContainer.parentNode.removeChild(controlContainer);\n      controlContainer = null;\n      return this;\n    },\n    connect() {\n      ctx.map.off('load', setup.connect);\n      clearInterval(mapLoadedInterval);\n      setup.addLayers();\n      ctx.store.storeMapConfig();\n      ctx.events.addEventListeners();\n    },\n    onAdd(map) {\n      ctx.map = map;\n      ctx.events = events(ctx);\n      ctx.ui = ui(ctx);\n      ctx.container = map.getContainer();\n      ctx.store = new Store(ctx);\n      controlContainer = ctx.ui.addButtons();\n      if (ctx.options.boxSelect) {\n        ctx.boxZoomInitial = map.boxZoom.isEnabled();\n        map.boxZoom.disable();\n        const dragPanIsEnabled = map.dragPan.isEnabled();\n        // Need to toggle dragPan on and off or else first\n        // dragPan disable attempt in simple_select doesn't work\n        map.dragPan.disable();\n        map.dragPan.enable();\n        if (!dragPanIsEnabled) {\n          map.dragPan.disable();\n        }\n      }\n      if (map.loaded()) {\n        setup.connect();\n      } else {\n        map.on('load', setup.connect);\n        mapLoadedInterval = setInterval(() => {\n          if (map.loaded()) setup.connect();\n        }, 16);\n      }\n      ctx.events.start();\n      return controlContainer;\n    },\n    addLayers() {\n      // drawn features style\n      ctx.map.addSource(Constants.sources.COLD, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n\n      // hot features style\n      ctx.map.addSource(Constants.sources.HOT, {\n        data: {\n          type: Constants.geojsonTypes.FEATURE_COLLECTION,\n          features: []\n        },\n        type: 'geojson'\n      });\n      ctx.options.styles.forEach(style => {\n        ctx.map.addLayer(style);\n      });\n      ctx.store.setDirty(true);\n      ctx.store.render();\n    },\n    // Check for layers and sources before attempting to remove\n    // If user adds draw control and removes it before the map is loaded, layers and sources will be missing\n    removeLayers() {\n      ctx.options.styles.forEach(style => {\n        if (ctx.map.getLayer(style.id)) {\n          ctx.map.removeLayer(style.id);\n        }\n      });\n      if (ctx.map.getSource(Constants.sources.COLD)) {\n        ctx.map.removeSource(Constants.sources.COLD);\n      }\n      if (ctx.map.getSource(Constants.sources.HOT)) {\n        ctx.map.removeSource(Constants.sources.HOT);\n      }\n    }\n  };\n  ctx.setup = setup;\n  return setup;\n}", "/* eslint comma-dangle: [\"error\", \"always-multiline\"] */\n\nconst blue = '#3bb2d0';\nconst orange = '#fbb03b';\nconst white = '#fff';\nexport default [\n// Polygons\n//   Solid fill\n//   Active state defines color\n{\n  'id': 'gl-draw-polygon-fill',\n  'type': 'fill',\n  'filter': ['all', ['==', '$type', 'Polygon']],\n  'paint': {\n    'fill-color': ['case', ['==', ['get', 'active'], 'true'], orange, blue],\n    'fill-opacity': 0.1\n  }\n},\n// Lines\n// Polygon\n//   Matches Lines AND Polygons\n//   Active state defines color\n{\n  'id': 'gl-draw-lines',\n  'type': 'line',\n  'filter': ['any', ['==', '$type', 'LineString'], ['==', '$type', 'Polygon']],\n  'layout': {\n    'line-cap': 'round',\n    'line-join': 'round'\n  },\n  'paint': {\n    'line-color': ['case', ['==', ['get', 'active'], 'true'], orange, blue],\n    'line-dasharray': ['case', ['==', ['get', 'active'], 'true'], [0.2, 2], [2, 0]],\n    'line-width': 2\n  }\n},\n// Points\n//   Circle with an outline\n//   Active state defines size and color\n{\n  'id': 'gl-draw-point-outer',\n  'type': 'circle',\n  'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'feature']],\n  'paint': {\n    'circle-radius': ['case', ['==', ['get', 'active'], 'true'], 7, 5],\n    'circle-color': white\n  }\n}, {\n  'id': 'gl-draw-point-inner',\n  'type': 'circle',\n  'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'feature']],\n  'paint': {\n    'circle-radius': ['case', ['==', ['get', 'active'], 'true'], 5, 3],\n    'circle-color': ['case', ['==', ['get', 'active'], 'true'], orange, blue]\n  }\n},\n// Vertex\n//   Visible when editing polygons and lines\n//   Similar behaviour to Points\n//   Active state defines size\n{\n  'id': 'gl-draw-vertex-outer',\n  'type': 'circle',\n  'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex'], ['!=', 'mode', 'simple_select']],\n  'paint': {\n    'circle-radius': ['case', ['==', ['get', 'active'], 'true'], 7, 5],\n    'circle-color': white\n  }\n}, {\n  'id': 'gl-draw-vertex-inner',\n  'type': 'circle',\n  'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex'], ['!=', 'mode', 'simple_select']],\n  'paint': {\n    'circle-radius': ['case', ['==', ['get', 'active'], 'true'], 5, 3],\n    'circle-color': orange\n  }\n},\n// Midpoint\n//   Visible when editing polygons and lines\n//   Tapping or dragging them adds a new vertex to the feature\n{\n  'id': 'gl-draw-midpoint',\n  'type': 'circle',\n  'filter': ['all', ['==', 'meta', 'midpoint']],\n  'paint': {\n    'circle-radius': 3,\n    'circle-color': orange\n  }\n}];", "import * as Constants from '../constants.js';\nexport function isOfMetaType(type) {\n  return function (e) {\n    const featureTarget = e.featureTarget;\n    if (!featureTarget) return false;\n    if (!featureTarget.properties) return false;\n    return featureTarget.properties.meta === type;\n  };\n}\nexport function isShiftMousedown(e) {\n  if (!e.originalEvent) return false;\n  if (!e.originalEvent.shiftKey) return false;\n  return e.originalEvent.button === 0;\n}\nexport function isActiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.ACTIVE && e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\nexport function isInactiveFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.active === Constants.activeStates.INACTIVE && e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\nexport function noTarget(e) {\n  return e.featureTarget === undefined;\n}\nexport function isFeature(e) {\n  if (!e.featureTarget) return false;\n  if (!e.featureTarget.properties) return false;\n  return e.featureTarget.properties.meta === Constants.meta.FEATURE;\n}\nexport function isVertex(e) {\n  const featureTarget = e.featureTarget;\n  if (!featureTarget) return false;\n  if (!featureTarget.properties) return false;\n  return featureTarget.properties.meta === Constants.meta.VERTEX;\n}\nexport function isShiftDown(e) {\n  if (!e.originalEvent) return false;\n  return e.originalEvent.shiftKey === true;\n}\nexport function isEscapeKey(e) {\n  return e.keyCode === 27;\n}\nexport function isEnterKey(e) {\n  return e.keyCode === 13;\n}\nexport function isTrue() {\n  return true;\n}", "/**\n * A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class\n * @param {number} x the x-coordinate. This could be longitude or screen pixels, or any other sort of unit.\n * @param {number} y the y-coordinate. This could be latitude or screen pixels, or any other sort of unit.\n *\n * @example\n * const point = new Point(-77, 38);\n */\nexport default function Point(x, y) {\n  this.x = x;\n  this.y = y;\n}\nPoint.prototype = {\n  /**\n   * Clone this point, returning a new point that can be modified\n   * without affecting the old one.\n   * @return {Point} the clone\n   */\n  clone() {\n    return new Point(this.x, this.y);\n  },\n  /**\n   * Add this point's x & y coordinates to another point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  add(p) {\n    return this.clone()._add(p);\n  },\n  /**\n   * Subtract this point's x & y coordinates to from point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  sub(p) {\n    return this.clone()._sub(p);\n  },\n  /**\n   * Multiply this point's x & y coordinates by point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  multByPoint(p) {\n    return this.clone()._multByPoint(p);\n  },\n  /**\n   * Divide this point's x & y coordinates by point,\n   * yielding a new point.\n   * @param {Point} p the other point\n   * @return {Point} output point\n   */\n  divByPoint(p) {\n    return this.clone()._divByPoint(p);\n  },\n  /**\n   * Multiply this point's x & y coordinates by a factor,\n   * yielding a new point.\n   * @param {number} k factor\n   * @return {Point} output point\n   */\n  mult(k) {\n    return this.clone()._mult(k);\n  },\n  /**\n   * Divide this point's x & y coordinates by a factor,\n   * yielding a new point.\n   * @param {number} k factor\n   * @return {Point} output point\n   */\n  div(k) {\n    return this.clone()._div(k);\n  },\n  /**\n   * Rotate this point around the 0, 0 origin by an angle a,\n   * given in radians\n   * @param {number} a angle to rotate around, in radians\n   * @return {Point} output point\n   */\n  rotate(a) {\n    return this.clone()._rotate(a);\n  },\n  /**\n   * Rotate this point around p point by an angle a,\n   * given in radians\n   * @param {number} a angle to rotate around, in radians\n   * @param {Point} p Point to rotate around\n   * @return {Point} output point\n   */\n  rotateAround(a, p) {\n    return this.clone()._rotateAround(a, p);\n  },\n  /**\n   * Multiply this point by a 4x1 transformation matrix\n   * @param {[number, number, number, number]} m transformation matrix\n   * @return {Point} output point\n   */\n  matMult(m) {\n    return this.clone()._matMult(m);\n  },\n  /**\n   * Calculate this point but as a unit vector from 0, 0, meaning\n   * that the distance from the resulting point to the 0, 0\n   * coordinate will be equal to 1 and the angle from the resulting\n   * point to the 0, 0 coordinate will be the same as before.\n   * @return {Point} unit vector point\n   */\n  unit() {\n    return this.clone()._unit();\n  },\n  /**\n   * Compute a perpendicular point, where the new y coordinate\n   * is the old x coordinate and the new x coordinate is the old y\n   * coordinate multiplied by -1\n   * @return {Point} perpendicular point\n   */\n  perp() {\n    return this.clone()._perp();\n  },\n  /**\n   * Return a version of this point with the x & y coordinates\n   * rounded to integers.\n   * @return {Point} rounded point\n   */\n  round() {\n    return this.clone()._round();\n  },\n  /**\n   * Return the magnitude of this point: this is the Euclidean\n   * distance from the 0, 0 coordinate to this point's x and y\n   * coordinates.\n   * @return {number} magnitude\n   */\n  mag() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  /**\n   * Judge whether this point is equal to another point, returning\n   * true or false.\n   * @param {Point} other the other point\n   * @return {boolean} whether the points are equal\n   */\n  equals(other) {\n    return this.x === other.x && this.y === other.y;\n  },\n  /**\n   * Calculate the distance from this point to another point\n   * @param {Point} p the other point\n   * @return {number} distance\n   */\n  dist(p) {\n    return Math.sqrt(this.distSqr(p));\n  },\n  /**\n   * Calculate the distance from this point to another point,\n   * without the square root step. Useful if you're comparing\n   * relative distances.\n   * @param {Point} p the other point\n   * @return {number} distance\n   */\n  distSqr(p) {\n    const dx = p.x - this.x,\n      dy = p.y - this.y;\n    return dx * dx + dy * dy;\n  },\n  /**\n   * Get the angle from the 0, 0 coordinate to this point, in radians\n   * coordinates.\n   * @return {number} angle\n   */\n  angle() {\n    return Math.atan2(this.y, this.x);\n  },\n  /**\n   * Get the angle from this point to another point, in radians\n   * @param {Point} b the other point\n   * @return {number} angle\n   */\n  angleTo(b) {\n    return Math.atan2(this.y - b.y, this.x - b.x);\n  },\n  /**\n   * Get the angle between this point and another point, in radians\n   * @param {Point} b the other point\n   * @return {number} angle\n   */\n  angleWith(b) {\n    return this.angleWithSep(b.x, b.y);\n  },\n  /**\n   * Find the angle of the two vectors, solving the formula for\n   * the cross product a x b = |a||b|sin(θ) for θ.\n   * @param {number} x the x-coordinate\n   * @param {number} y the y-coordinate\n   * @return {number} the angle in radians\n   */\n  angleWithSep(x, y) {\n    return Math.atan2(this.x * y - this.y * x, this.x * x + this.y * y);\n  },\n  /** @param {[number, number, number, number]} m */\n  _matMult(m) {\n    const x = m[0] * this.x + m[1] * this.y,\n      y = m[2] * this.x + m[3] * this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  /** @param {Point} p */\n  _add(p) {\n    this.x += p.x;\n    this.y += p.y;\n    return this;\n  },\n  /** @param {Point} p */\n  _sub(p) {\n    this.x -= p.x;\n    this.y -= p.y;\n    return this;\n  },\n  /** @param {number} k */\n  _mult(k) {\n    this.x *= k;\n    this.y *= k;\n    return this;\n  },\n  /** @param {number} k */\n  _div(k) {\n    this.x /= k;\n    this.y /= k;\n    return this;\n  },\n  /** @param {Point} p */\n  _multByPoint(p) {\n    this.x *= p.x;\n    this.y *= p.y;\n    return this;\n  },\n  /** @param {Point} p */\n  _divByPoint(p) {\n    this.x /= p.x;\n    this.y /= p.y;\n    return this;\n  },\n  _unit() {\n    this._div(this.mag());\n    return this;\n  },\n  _perp() {\n    const y = this.y;\n    this.y = this.x;\n    this.x = -y;\n    return this;\n  },\n  /** @param {number} angle */\n  _rotate(angle) {\n    const cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      x = cos * this.x - sin * this.y,\n      y = sin * this.x + cos * this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  /**\n   * @param {number} angle\n   * @param {Point} p\n   */\n  _rotateAround(angle, p) {\n    const cos = Math.cos(angle),\n      sin = Math.sin(angle),\n      x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),\n      y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  _round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  constructor: Point\n};\n\n/**\n * Construct a point from an array if necessary, otherwise if the input\n * is already a Point, return it unchanged.\n * @param {Point | [number, number] | {x: number, y: number}} p input value\n * @return {Point} constructed point.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);\n */\nPoint.convert = function (p) {\n  if (p instanceof Point) {\n    return /** @type {Point} */p;\n  }\n  if (Array.isArray(p)) {\n    return new Point(+p[0], +p[1]);\n  }\n  if (p.x !== undefined && p.y !== undefined) {\n    return new Point(+p.x, +p.y);\n  }\n  throw new Error('Expected [x, y] or {x, y} point format');\n};", "import Point from '@mapbox/point-geometry';\n\n/**\n * Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}\n */\nfunction mouseEventPoint(mouseEvent, container) {\n  const rect = container.getBoundingClientRect();\n  return new Point(mouseEvent.clientX - rect.left - (container.clientLeft || 0), mouseEvent.clientY - rect.top - (container.clientTop || 0));\n}\nexport default mouseEventPoint;", "import * as Constants from '../constants.js';\n\n/**\n * Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point\n */\n\nexport default function (parentId, coordinates, path, selected) {\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.VERTEX,\n      parent: parentId,\n      coord_path: path,\n      active: selected ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates\n    }\n  };\n}", "import * as Constants from '../constants.js';\nexport default function (parent, startVertex, endVertex) {\n  const startCoord = startVertex.geometry.coordinates;\n  const endCoord = endVertex.geometry.coordinates;\n\n  // If a coordinate exceeds the projection, we can't calculate a midpoint,\n  // so run away\n  if (startCoord[1] > Constants.LAT_RENDERED_MAX || startCoord[1] < Constants.LAT_RENDERED_MIN || endCoord[1] > Constants.LAT_RENDERED_MAX || endCoord[1] < Constants.LAT_RENDERED_MIN) {\n    return null;\n  }\n  const mid = {\n    lng: (startCoord[0] + endCoord[0]) / 2,\n    lat: (startCoord[1] + endCoord[1]) / 2\n  };\n  return {\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {\n      meta: Constants.meta.MIDPOINT,\n      parent,\n      lng: mid.lng,\n      lat: mid.lat,\n      coord_path: endVertex.properties.coord_path\n    },\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: [mid.lng, mid.lat]\n    }\n  };\n}", "import createVertex from './create_vertex.js';\nimport createMidpoint from './create_midpoint.js';\nimport * as Constants from '../constants.js';\nfunction createSupplementaryPoints(geojson, options = {}, basePath = null) {\n  const {\n    type,\n    coordinates\n  } = geojson.geometry;\n  const featureId = geojson.properties && geojson.properties.id;\n  let supplementaryPoints = [];\n  if (type === Constants.geojsonTypes.POINT) {\n    // For points, just create a vertex\n    supplementaryPoints.push(createVertex(featureId, coordinates, basePath, isSelectedPath(basePath)));\n  } else if (type === Constants.geojsonTypes.POLYGON) {\n    // Cycle through a Polygon's rings and\n    // process each line\n    coordinates.forEach((line, lineIndex) => {\n      processLine(line, basePath !== null ? `${basePath}.${lineIndex}` : String(lineIndex));\n    });\n  } else if (type === Constants.geojsonTypes.LINE_STRING) {\n    processLine(coordinates, basePath);\n  } else if (type.indexOf(Constants.geojsonTypes.MULTI_PREFIX) === 0) {\n    processMultiGeometry();\n  }\n  function processLine(line, lineBasePath) {\n    let firstPointString = '';\n    let lastVertex = null;\n    line.forEach((point, pointIndex) => {\n      const pointPath = lineBasePath !== undefined && lineBasePath !== null ? `${lineBasePath}.${pointIndex}` : String(pointIndex);\n      const vertex = createVertex(featureId, point, pointPath, isSelectedPath(pointPath));\n\n      // If we're creating midpoints, check if there was a\n      // vertex before this one. If so, add a midpoint\n      // between that vertex and this one.\n      if (options.midpoints && lastVertex) {\n        const midpoint = createMidpoint(featureId, lastVertex, vertex);\n        if (midpoint) {\n          supplementaryPoints.push(midpoint);\n        }\n      }\n      lastVertex = vertex;\n\n      // A Polygon line's last point is the same as the first point. If we're on the last\n      // point, we want to draw a midpoint before it but not another vertex on it\n      // (since we already a vertex there, from the first point).\n      const stringifiedPoint = JSON.stringify(point);\n      if (firstPointString !== stringifiedPoint) {\n        supplementaryPoints.push(vertex);\n      }\n      if (pointIndex === 0) {\n        firstPointString = stringifiedPoint;\n      }\n    });\n  }\n  function isSelectedPath(path) {\n    if (!options.selectedPaths) return false;\n    return options.selectedPaths.indexOf(path) !== -1;\n  }\n\n  // Split a multi-geometry into constituent\n  // geometries, and accumulate the supplementary points\n  // for each of those constituents\n  function processMultiGeometry() {\n    const subType = type.replace(Constants.geojsonTypes.MULTI_PREFIX, '');\n    coordinates.forEach((subCoordinates, index) => {\n      const subFeature = {\n        type: Constants.geojsonTypes.FEATURE,\n        properties: geojson.properties,\n        geometry: {\n          type: subType,\n          coordinates: subCoordinates\n        }\n      };\n      supplementaryPoints = supplementaryPoints.concat(createSupplementaryPoints(subFeature, options, index));\n    });\n  }\n  return supplementaryPoints;\n}\nexport default createSupplementaryPoints;", "export default {\n  enable(ctx) {\n    setTimeout(() => {\n      // First check we've got a map and some context.\n      if (!ctx.map || !ctx.map.doubleClickZoom || !ctx._ctx || !ctx._ctx.store || !ctx._ctx.store.getInitialConfigValue) return;\n      // Now check initial state wasn't false (we leave it disabled if so)\n      if (!ctx._ctx.store.getInitialConfigValue('doubleClickZoom')) return;\n      ctx.map.doubleClickZoom.enable();\n    }, 0);\n  },\n  disable(ctx) {\n    setTimeout(() => {\n      if (!ctx.map || !ctx.map.doubleClickZoom) return;\n      // Always disable here, as it's necessary in some cases.\n      ctx.map.doubleClickZoom.disable();\n    }, 0);\n  }\n};", "import * as Constants from '../constants.js';\nconst {\n  LAT_MIN,\n  LAT_MAX,\n  LAT_RENDERED_MIN,\n  LAT_RENDERED_MAX,\n  LNG_MIN,\n  LNG_MAX\n} = Constants;\nfunction extent(feature) {\n  const depth = {\n    Point: 0,\n    LineString: 1,\n    Polygon: 2,\n    MultiPoint: 1,\n    MultiLineString: 2,\n    MultiPolygon: 3\n  }[feature.geometry.type];\n  const coords = [feature.geometry.coordinates].flat(depth);\n  const lngs = coords.map(coord => coord[0]);\n  const lats = coords.map(coord => coord[1]);\n  const min = vals => Math.min.apply(null, vals);\n  const max = vals => Math.max.apply(null, vals);\n  return [min(lngs), min(lats), max(lngs), max(lats)];\n}\n\n// Ensure that we do not drag north-south far enough for\n// - any part of any feature to exceed the poles\n// - any feature to be completely lost in the space between the projection's\n//   edge and the poles, such that it couldn't be re-selected and moved back\nexport default function (geojsonFeatures, delta) {\n  // \"inner edge\" = a feature's latitude closest to the equator\n  let northInnerEdge = LAT_MIN;\n  let southInnerEdge = LAT_MAX;\n  // \"outer edge\" = a feature's latitude furthest from the equator\n  let northOuterEdge = LAT_MIN;\n  let southOuterEdge = LAT_MAX;\n  let westEdge = LNG_MAX;\n  let eastEdge = LNG_MIN;\n  geojsonFeatures.forEach(feature => {\n    const bounds = extent(feature);\n    const featureSouthEdge = bounds[1];\n    const featureNorthEdge = bounds[3];\n    const featureWestEdge = bounds[0];\n    const featureEastEdge = bounds[2];\n    if (featureSouthEdge > northInnerEdge) northInnerEdge = featureSouthEdge;\n    if (featureNorthEdge < southInnerEdge) southInnerEdge = featureNorthEdge;\n    if (featureNorthEdge > northOuterEdge) northOuterEdge = featureNorthEdge;\n    if (featureSouthEdge < southOuterEdge) southOuterEdge = featureSouthEdge;\n    if (featureWestEdge < westEdge) westEdge = featureWestEdge;\n    if (featureEastEdge > eastEdge) eastEdge = featureEastEdge;\n  });\n\n  // These changes are not mutually exclusive: we might hit the inner\n  // edge but also have hit the outer edge and therefore need\n  // another readjustment\n  const constrainedDelta = delta;\n  if (northInnerEdge + constrainedDelta.lat > LAT_RENDERED_MAX) {\n    constrainedDelta.lat = LAT_RENDERED_MAX - northInnerEdge;\n  }\n  if (northOuterEdge + constrainedDelta.lat > LAT_MAX) {\n    constrainedDelta.lat = LAT_MAX - northOuterEdge;\n  }\n  if (southInnerEdge + constrainedDelta.lat < LAT_RENDERED_MIN) {\n    constrainedDelta.lat = LAT_RENDERED_MIN - southInnerEdge;\n  }\n  if (southOuterEdge + constrainedDelta.lat < LAT_MIN) {\n    constrainedDelta.lat = LAT_MIN - southOuterEdge;\n  }\n  if (westEdge + constrainedDelta.lng <= LNG_MIN) {\n    constrainedDelta.lng += Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  if (eastEdge + constrainedDelta.lng >= LNG_MAX) {\n    constrainedDelta.lng -= Math.ceil(Math.abs(constrainedDelta.lng) / 360) * 360;\n  }\n  return constrainedDelta;\n}", "import constrainFeatureMovement from './constrain_feature_movement.js';\nimport * as Constants from '../constants.js';\nexport default function (features, delta) {\n  const constrainedDelta = constrainFeatureMovement(features.map(feature => feature.toGeoJSON()), delta);\n  features.forEach(feature => {\n    const currentCoordinates = feature.getCoordinates();\n    const moveCoordinate = coord => {\n      const point = {\n        lng: coord[0] + constrainedDelta.lng,\n        lat: coord[1] + constrainedDelta.lat\n      };\n      return [point.lng, point.lat];\n    };\n    const moveRing = ring => ring.map(coord => moveCoordinate(coord));\n    const moveMultiPolygon = multi => multi.map(ring => moveRing(ring));\n    let nextCoordinates;\n    if (feature.type === Constants.geojsonTypes.POINT) {\n      nextCoordinates = moveCoordinate(currentCoordinates);\n    } else if (feature.type === Constants.geojsonTypes.LINE_STRING || feature.type === Constants.geojsonTypes.MULTI_POINT) {\n      nextCoordinates = currentCoordinates.map(moveCoordinate);\n    } else if (feature.type === Constants.geojsonTypes.POLYGON || feature.type === Constants.geojsonTypes.MULTI_LINE_STRING) {\n      nextCoordinates = currentCoordinates.map(moveRing);\n    } else if (feature.type === Constants.geojsonTypes.MULTI_POLYGON) {\n      nextCoordinates = currentCoordinates.map(moveMultiPolygon);\n    }\n    feature.incomingCoords(nextCoordinates);\n  });\n}", "import * as CommonSelectors from '../lib/common_selectors.js';\nimport mouseEventPoint from '../lib/mouse_event_point.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport StringSet from '../lib/string_set.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport moveFeatures from '../lib/move_features.js';\nimport * as Constants from '../constants.js';\nconst SimpleSelect = {};\nSimpleSelect.onSetup = function (opts) {\n  // turn the opts into state.\n  const state = {\n    dragMoveLocation: null,\n    boxSelectStartLocation: null,\n    boxSelectElement: undefined,\n    boxSelecting: false,\n    canBoxSelect: false,\n    dragMoving: false,\n    canDragMove: false,\n    initialDragPanState: this.map.dragPan.isEnabled(),\n    initiallySelectedFeatureIds: opts.featureIds || []\n  };\n  this.setSelected(state.initiallySelectedFeatureIds.filter(id => this.getFeature(id) !== undefined));\n  this.fireActionable();\n  this.setActionableState({\n    combineFeatures: true,\n    uncombineFeatures: true,\n    trash: true\n  });\n  return state;\n};\nSimpleSelect.fireUpdate = function () {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.MOVE,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\nSimpleSelect.fireActionable = function () {\n  const selectedFeatures = this.getSelected();\n  const multiFeatures = selectedFeatures.filter(feature => this.isInstanceOf('MultiFeature', feature));\n  let combineFeatures = false;\n  if (selectedFeatures.length > 1) {\n    combineFeatures = true;\n    const featureType = selectedFeatures[0].type.replace('Multi', '');\n    selectedFeatures.forEach(feature => {\n      if (feature.type.replace('Multi', '') !== featureType) {\n        combineFeatures = false;\n      }\n    });\n  }\n  const uncombineFeatures = multiFeatures.length > 0;\n  const trash = selectedFeatures.length > 0;\n  this.setActionableState({\n    combineFeatures,\n    uncombineFeatures,\n    trash\n  });\n};\nSimpleSelect.getUniqueIds = function (allFeatures) {\n  if (!allFeatures.length) return [];\n  const ids = allFeatures.map(s => s.properties.id).filter(id => id !== undefined).reduce((memo, id) => {\n    memo.add(id);\n    return memo;\n  }, new StringSet());\n  return ids.values();\n};\nSimpleSelect.stopExtendedInteractions = function (state) {\n  if (state.boxSelectElement) {\n    if (state.boxSelectElement.parentNode) state.boxSelectElement.parentNode.removeChild(state.boxSelectElement);\n    state.boxSelectElement = null;\n  }\n  if ((state.canDragMove || state.canBoxSelect) && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n  state.boxSelecting = false;\n  state.canBoxSelect = false;\n  state.dragMoving = false;\n  state.canDragMove = false;\n};\nSimpleSelect.onStop = function () {\n  doubleClickZoom.enable(this);\n};\nSimpleSelect.onMouseMove = function (state, e) {\n  const isFeature = CommonSelectors.isFeature(e);\n  if (isFeature && state.dragMoving) this.fireUpdate();\n\n  // On mousemove that is not a drag, stop extended interactions.\n  // This is useful if you drag off the canvas, release the button,\n  // then move the mouse back over the canvas --- we don't allow the\n  // interaction to continue then, but we do let it continue if you held\n  // the mouse button that whole time\n  this.stopExtendedInteractions(state);\n\n  // Skip render\n  return true;\n};\nSimpleSelect.onMouseOut = function (state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) return this.fireUpdate();\n\n  // Skip render\n  return true;\n};\nSimpleSelect.onTap = SimpleSelect.onClick = function (state, e) {\n  // Click (with or without shift) on no feature\n  if (CommonSelectors.noTarget(e)) return this.clickAnywhere(state, e); // also tap\n  if (CommonSelectors.isOfMetaType(Constants.meta.VERTEX)(e)) return this.clickOnVertex(state, e); //tap\n  if (CommonSelectors.isFeature(e)) return this.clickOnFeature(state, e);\n};\nSimpleSelect.clickAnywhere = function (state) {\n  // Clear the re-render selection\n  const wasSelected = this.getSelectedIds();\n  if (wasSelected.length) {\n    this.clearSelectedFeatures();\n    wasSelected.forEach(id => this.doRender(id));\n  }\n  doubleClickZoom.enable(this);\n  this.stopExtendedInteractions(state);\n};\nSimpleSelect.clickOnVertex = function (state, e) {\n  // Enter direct select mode\n  this.changeMode(Constants.modes.DIRECT_SELECT, {\n    featureId: e.featureTarget.properties.parent,\n    coordPath: e.featureTarget.properties.coord_path,\n    startPos: e.lngLat\n  });\n  this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });\n};\nSimpleSelect.startOnActiveFeature = function (state, e) {\n  // Stop any already-underway extended interactions\n  this.stopExtendedInteractions(state);\n\n  // Disable map.dragPan immediately so it can't start\n  this.map.dragPan.disable();\n\n  // Re-render it and enable drag move\n  this.doRender(e.featureTarget.properties.id);\n\n  // Set up the state for drag moving\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\nSimpleSelect.clickOnFeature = function (state, e) {\n  // Stop everything\n  doubleClickZoom.disable(this);\n  this.stopExtendedInteractions(state);\n  const isShiftClick = CommonSelectors.isShiftDown(e);\n  const selectedFeatureIds = this.getSelectedIds();\n  const featureId = e.featureTarget.properties.id;\n  const isFeatureSelected = this.isSelected(featureId);\n\n  // Click (without shift) on any selected feature but a point\n  if (!isShiftClick && isFeatureSelected && this.getFeature(featureId).type !== Constants.geojsonTypes.POINT) {\n    // Enter direct select mode\n    return this.changeMode(Constants.modes.DIRECT_SELECT, {\n      featureId\n    });\n  }\n\n  // Shift-click on a selected feature\n  if (isFeatureSelected && isShiftClick) {\n    // Deselect it\n    this.deselect(featureId);\n    this.updateUIClasses({\n      mouse: Constants.cursors.POINTER\n    });\n    if (selectedFeatureIds.length === 1) {\n      doubleClickZoom.enable(this);\n    }\n    // Shift-click on an unselected feature\n  } else if (!isFeatureSelected && isShiftClick) {\n    // Add it to the selection\n    this.select(featureId);\n    this.updateUIClasses({\n      mouse: Constants.cursors.MOVE\n    });\n    // Click (without shift) on an unselected feature\n  } else if (!isFeatureSelected && !isShiftClick) {\n    // Make it the only selected feature\n    selectedFeatureIds.forEach(id => this.doRender(id));\n    this.setSelected(featureId);\n    this.updateUIClasses({\n      mouse: Constants.cursors.MOVE\n    });\n  }\n\n  // No matter what, re-render the clicked feature\n  this.doRender(featureId);\n};\nSimpleSelect.onMouseDown = function (state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n  if (this.drawConfig.boxSelect && CommonSelectors.isShiftMousedown(e)) return this.startBoxSelect(state, e);\n};\nSimpleSelect.startBoxSelect = function (state, e) {\n  this.stopExtendedInteractions(state);\n  this.map.dragPan.disable();\n  // Enable box select\n  state.boxSelectStartLocation = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  state.canBoxSelect = true;\n};\nSimpleSelect.onTouchStart = function (state, e) {\n  if (CommonSelectors.isActiveFeature(e)) return this.startOnActiveFeature(state, e);\n};\nSimpleSelect.onDrag = function (state, e) {\n  if (state.canDragMove) return this.dragMove(state, e);\n  if (this.drawConfig.boxSelect && state.canBoxSelect) return this.whileBoxSelect(state, e);\n};\nSimpleSelect.whileBoxSelect = function (state, e) {\n  state.boxSelecting = true;\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n\n  // Create the box node if it doesn't exist\n  if (!state.boxSelectElement) {\n    state.boxSelectElement = document.createElement('div');\n    state.boxSelectElement.classList.add(Constants.classes.BOX_SELECT);\n    this.map.getContainer().appendChild(state.boxSelectElement);\n  }\n\n  // Adjust the box node's width and xy position\n  const current = mouseEventPoint(e.originalEvent, this.map.getContainer());\n  const minX = Math.min(state.boxSelectStartLocation.x, current.x);\n  const maxX = Math.max(state.boxSelectStartLocation.x, current.x);\n  const minY = Math.min(state.boxSelectStartLocation.y, current.y);\n  const maxY = Math.max(state.boxSelectStartLocation.y, current.y);\n  const translateValue = `translate(${minX}px, ${minY}px)`;\n  state.boxSelectElement.style.transform = translateValue;\n  state.boxSelectElement.style.WebkitTransform = translateValue;\n  state.boxSelectElement.style.width = `${maxX - minX}px`;\n  state.boxSelectElement.style.height = `${maxY - minY}px`;\n};\nSimpleSelect.dragMove = function (state, e) {\n  // Dragging when drag move is enabled\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\nSimpleSelect.onTouchEnd = SimpleSelect.onMouseUp = function (state, e) {\n  // End any extended interactions\n  if (state.dragMoving) {\n    this.fireUpdate();\n  } else if (state.boxSelecting) {\n    const bbox = [state.boxSelectStartLocation, mouseEventPoint(e.originalEvent, this.map.getContainer())];\n    const featuresInBox = this.featuresAt(null, bbox, 'click');\n    const idsToSelect = this.getUniqueIds(featuresInBox).filter(id => !this.isSelected(id));\n    if (idsToSelect.length) {\n      this.select(idsToSelect);\n      idsToSelect.forEach(id => this.doRender(id));\n      this.updateUIClasses({\n        mouse: Constants.cursors.MOVE\n      });\n    }\n  }\n  this.stopExtendedInteractions(state);\n};\nSimpleSelect.toDisplayFeatures = function (state, geojson, display) {\n  geojson.properties.active = this.isSelected(geojson.properties.id) ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  display(geojson);\n  this.fireActionable();\n  if (geojson.properties.active !== Constants.activeStates.ACTIVE || geojson.geometry.type === Constants.geojsonTypes.POINT) return;\n  createSupplementaryPoints(geojson).forEach(display);\n};\nSimpleSelect.onTrash = function () {\n  this.deleteFeature(this.getSelectedIds());\n  this.fireActionable();\n};\nSimpleSelect.onCombineFeatures = function () {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0 || selectedFeatures.length < 2) return;\n  const coordinates = [],\n    featuresCombined = [];\n  const featureType = selectedFeatures[0].type.replace('Multi', '');\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n    if (feature.type.replace('Multi', '') !== featureType) {\n      return;\n    }\n    if (feature.type.includes('Multi')) {\n      feature.getCoordinates().forEach(subcoords => {\n        coordinates.push(subcoords);\n      });\n    } else {\n      coordinates.push(feature.getCoordinates());\n    }\n    featuresCombined.push(feature.toGeoJSON());\n  }\n  if (featuresCombined.length > 1) {\n    const multiFeature = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: featuresCombined[0].properties,\n      geometry: {\n        type: `Multi${featureType}`,\n        coordinates\n      }\n    });\n    this.addFeature(multiFeature);\n    this.deleteFeature(this.getSelectedIds(), {\n      silent: true\n    });\n    this.setSelected([multiFeature.id]);\n    this.fire(Constants.events.COMBINE_FEATURES, {\n      createdFeatures: [multiFeature.toGeoJSON()],\n      deletedFeatures: featuresCombined\n    });\n  }\n  this.fireActionable();\n};\nSimpleSelect.onUncombineFeatures = function () {\n  const selectedFeatures = this.getSelected();\n  if (selectedFeatures.length === 0) return;\n  const createdFeatures = [];\n  const featuresUncombined = [];\n  for (let i = 0; i < selectedFeatures.length; i++) {\n    const feature = selectedFeatures[i];\n    if (this.isInstanceOf('MultiFeature', feature)) {\n      feature.getFeatures().forEach(subFeature => {\n        this.addFeature(subFeature);\n        subFeature.properties = feature.properties;\n        createdFeatures.push(subFeature.toGeoJSON());\n        this.select([subFeature.id]);\n      });\n      this.deleteFeature(feature.id, {\n        silent: true\n      });\n      featuresUncombined.push(feature.toGeoJSON());\n    }\n  }\n  if (createdFeatures.length > 1) {\n    this.fire(Constants.events.UNCOMBINE_FEATURES, {\n      createdFeatures,\n      deletedFeatures: featuresUncombined\n    });\n  }\n  this.fireActionable();\n};\nexport default SimpleSelect;", "import { noTarget, isOfMetaType, isActiveFeature, isInactiveFeature, isShiftDown } from '../lib/common_selectors.js';\nimport createSupplementaryPoints from '../lib/create_supplementary_points.js';\nimport constrainFeatureMovement from '../lib/constrain_feature_movement.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport moveFeatures from '../lib/move_features.js';\nconst isVertex = isOfMetaType(Constants.meta.VERTEX);\nconst isMidpoint = isOfMetaType(Constants.meta.MIDPOINT);\nconst DirectSelect = {};\n\n// INTERNAL FUCNTIONS\n\nDirectSelect.fireUpdate = function () {\n  this.fire(Constants.events.UPDATE, {\n    action: Constants.updateActions.CHANGE_COORDINATES,\n    features: this.getSelected().map(f => f.toGeoJSON())\n  });\n};\nDirectSelect.fireActionable = function (state) {\n  this.setActionableState({\n    combineFeatures: false,\n    uncombineFeatures: false,\n    trash: state.selectedCoordPaths.length > 0\n  });\n};\nDirectSelect.startDragging = function (state, e) {\n  state.initialDragPanState = this.map.dragPan.isEnabled();\n  this.map.dragPan.disable();\n  state.canDragMove = true;\n  state.dragMoveLocation = e.lngLat;\n};\nDirectSelect.stopDragging = function (state) {\n  if (state.canDragMove && state.initialDragPanState === true) {\n    this.map.dragPan.enable();\n  }\n  state.dragMoving = false;\n  state.canDragMove = false;\n  state.dragMoveLocation = null;\n};\nDirectSelect.onVertex = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  const selectedIndex = state.selectedCoordPaths.indexOf(about.coord_path);\n  if (!isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths = [about.coord_path];\n  } else if (isShiftDown(e) && selectedIndex === -1) {\n    state.selectedCoordPaths.push(about.coord_path);\n  }\n  const selectedCoordinates = this.pathsToCoordinates(state.featureId, state.selectedCoordPaths);\n  this.setSelectedCoordinates(selectedCoordinates);\n};\nDirectSelect.onMidpoint = function (state, e) {\n  this.startDragging(state, e);\n  const about = e.featureTarget.properties;\n  state.feature.addCoordinate(about.coord_path, about.lng, about.lat);\n  this.fireUpdate();\n  state.selectedCoordPaths = [about.coord_path];\n};\nDirectSelect.pathsToCoordinates = function (featureId, paths) {\n  return paths.map(coord_path => ({\n    feature_id: featureId,\n    coord_path\n  }));\n};\nDirectSelect.onFeature = function (state, e) {\n  if (state.selectedCoordPaths.length === 0) this.startDragging(state, e);else this.stopDragging(state);\n};\nDirectSelect.dragFeature = function (state, e, delta) {\n  moveFeatures(this.getSelected(), delta);\n  state.dragMoveLocation = e.lngLat;\n};\nDirectSelect.dragVertex = function (state, e, delta) {\n  const selectedCoords = state.selectedCoordPaths.map(coord_path => state.feature.getCoordinate(coord_path));\n  const selectedCoordPoints = selectedCoords.map(coords => ({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: coords\n    }\n  }));\n  const constrainedDelta = constrainFeatureMovement(selectedCoordPoints, delta);\n  for (let i = 0; i < selectedCoords.length; i++) {\n    const coord = selectedCoords[i];\n    state.feature.updateCoordinate(state.selectedCoordPaths[i], coord[0] + constrainedDelta.lng, coord[1] + constrainedDelta.lat);\n  }\n};\nDirectSelect.clickNoTarget = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDirectSelect.clickInactive = function () {\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDirectSelect.clickActiveFeature = function (state) {\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  state.feature.changed();\n};\n\n// EXTERNAL FUNCTIONS\n\nDirectSelect.onSetup = function (opts) {\n  const featureId = opts.featureId;\n  const feature = this.getFeature(featureId);\n  if (!feature) {\n    throw new Error('You must provide a featureId to enter direct_select mode');\n  }\n  if (feature.type === Constants.geojsonTypes.POINT) {\n    throw new TypeError('direct_select mode doesn\\'t handle point features');\n  }\n  const state = {\n    featureId,\n    feature,\n    dragMoveLocation: opts.startPos || null,\n    dragMoving: false,\n    canDragMove: false,\n    selectedCoordPaths: opts.coordPath ? [opts.coordPath] : []\n  };\n  this.setSelectedCoordinates(this.pathsToCoordinates(featureId, state.selectedCoordPaths));\n  this.setSelected(featureId);\n  doubleClickZoom.disable(this);\n  this.setActionableState({\n    trash: true\n  });\n  return state;\n};\nDirectSelect.onStop = function () {\n  doubleClickZoom.enable(this);\n  this.clearSelectedCoordinates();\n};\nDirectSelect.toDisplayFeatures = function (state, geojson, push) {\n  if (state.featureId === geojson.properties.id) {\n    geojson.properties.active = Constants.activeStates.ACTIVE;\n    push(geojson);\n    createSupplementaryPoints(geojson, {\n      map: this.map,\n      midpoints: true,\n      selectedPaths: state.selectedCoordPaths\n    }).forEach(push);\n  } else {\n    geojson.properties.active = Constants.activeStates.INACTIVE;\n    push(geojson);\n  }\n  this.fireActionable(state);\n};\nDirectSelect.onTrash = function (state) {\n  // Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them\n  // in reverse order so that we can remove by index safely.\n  state.selectedCoordPaths.sort((a, b) => b.localeCompare(a, 'en', {\n    numeric: true\n  })).forEach(id => state.feature.removeCoordinate(id));\n  this.fireUpdate();\n  state.selectedCoordPaths = [];\n  this.clearSelectedCoordinates();\n  this.fireActionable(state);\n  if (state.feature.isValid() === false) {\n    this.deleteFeature([state.featureId]);\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {});\n  }\n};\nDirectSelect.onMouseMove = function (state, e) {\n  // On mousemove that is not a drag, stop vertex movement.\n  const isFeature = isActiveFeature(e);\n  const onVertex = isVertex(e);\n  const isMidPoint = isMidpoint(e);\n  const noCoords = state.selectedCoordPaths.length === 0;\n  if (isFeature && noCoords) this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });else if (onVertex && !noCoords) this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });else this.updateUIClasses({\n    mouse: Constants.cursors.NONE\n  });\n  const isDraggableItem = onVertex || isFeature || isMidPoint;\n  if (isDraggableItem && state.dragMoving) this.fireUpdate();\n  this.stopDragging(state);\n\n  // Skip render\n  return true;\n};\nDirectSelect.onMouseOut = function (state) {\n  // As soon as you mouse leaves the canvas, update the feature\n  if (state.dragMoving) this.fireUpdate();\n\n  // Skip render\n  return true;\n};\nDirectSelect.onTouchStart = DirectSelect.onMouseDown = function (state, e) {\n  if (isVertex(e)) return this.onVertex(state, e);\n  if (isActiveFeature(e)) return this.onFeature(state, e);\n  if (isMidpoint(e)) return this.onMidpoint(state, e);\n};\nDirectSelect.onDrag = function (state, e) {\n  if (state.canDragMove !== true) return;\n  state.dragMoving = true;\n  e.originalEvent.stopPropagation();\n  const delta = {\n    lng: e.lngLat.lng - state.dragMoveLocation.lng,\n    lat: e.lngLat.lat - state.dragMoveLocation.lat\n  };\n  if (state.selectedCoordPaths.length > 0) this.dragVertex(state, e, delta);else this.dragFeature(state, e, delta);\n  state.dragMoveLocation = e.lngLat;\n};\nDirectSelect.onClick = function (state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n  this.stopDragging(state);\n};\nDirectSelect.onTap = function (state, e) {\n  if (noTarget(e)) return this.clickNoTarget(state, e);\n  if (isActiveFeature(e)) return this.clickActiveFeature(state, e);\n  if (isInactiveFeature(e)) return this.clickInactive(state, e);\n};\nDirectSelect.onTouchEnd = DirectSelect.onMouseUp = function (state) {\n  if (state.dragMoving) {\n    this.fireUpdate();\n  }\n  this.stopDragging(state);\n};\nexport default DirectSelect;", "import * as CommonSelectors from '../lib/common_selectors.js';\nimport * as Constants from '../constants.js';\nconst DrawPoint = {};\nDrawPoint.onSetup = function () {\n  const point = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POINT,\n      coordinates: []\n    }\n  });\n  this.addFeature(point);\n  this.clearSelectedFeatures();\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.POINT);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    point\n  };\n};\nDrawPoint.stopDrawingAndRemove = function (state) {\n  this.deleteFeature([state.point.id], {\n    silent: true\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDrawPoint.onTap = DrawPoint.onClick = function (state, e) {\n  this.updateUIClasses({\n    mouse: Constants.cursors.MOVE\n  });\n  state.point.updateCoordinate('', e.lngLat.lng, e.lngLat.lat);\n  this.fire(Constants.events.CREATE, {\n    features: [state.point.toGeoJSON()]\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.point.id]\n  });\n};\nDrawPoint.onStop = function (state) {\n  this.activateUIButton();\n  if (!state.point.getCoordinate().length) {\n    this.deleteFeature([state.point.id], {\n      silent: true\n    });\n  }\n};\nDrawPoint.toDisplayFeatures = function (state, geojson, display) {\n  // Never render the point we're drawing\n  const isActivePoint = geojson.properties.id === state.point.id;\n  geojson.properties.active = isActivePoint ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePoint) return display(geojson);\n};\nDrawPoint.onTrash = DrawPoint.stopDrawingAndRemove;\nDrawPoint.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEscapeKey(e) || CommonSelectors.isEnterKey(e)) {\n    return this.stopDrawingAndRemove(state, e);\n  }\n};\nexport default DrawPoint;", "function isEventAtCoordinates(event, coordinates) {\n  if (!event.lngLat) return false;\n  return event.lngLat.lng === coordinates[0] && event.lngLat.lat === coordinates[1];\n}\nexport default isEventAtCoordinates;", "import * as CommonSelectors from '../lib/common_selectors.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\nimport createVertex from '../lib/create_vertex.js';\nconst DrawPolygon = {};\nDrawPolygon.onSetup = function () {\n  const polygon = this.newFeature({\n    type: Constants.geojsonTypes.FEATURE,\n    properties: {},\n    geometry: {\n      type: Constants.geojsonTypes.POLYGON,\n      coordinates: [[]]\n    }\n  });\n  this.addFeature(polygon);\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.POLYGON);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    polygon,\n    currentVertexPosition: 0\n  };\n};\nDrawPolygon.clickAnywhere = function (state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.polygon.coordinates[0][state.currentVertexPosition - 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.polygon.id]\n    });\n  }\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  state.currentVertexPosition++;\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n};\nDrawPolygon.clickOnVertex = function (state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.polygon.id]\n  });\n};\nDrawPolygon.onMouseMove = function (state, e) {\n  state.polygon.updateCoordinate(`0.${state.currentVertexPosition}`, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({\n      mouse: Constants.cursors.POINTER\n    });\n  }\n};\nDrawPolygon.onTap = DrawPolygon.onClick = function (state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  return this.clickAnywhere(state, e);\n};\nDrawPolygon.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.polygon.id], {\n      silent: true\n    });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  } else if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.polygon.id]\n    });\n  }\n};\nDrawPolygon.onStop = function (state) {\n  this.updateUIClasses({\n    mouse: Constants.cursors.NONE\n  });\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.polygon.id) === undefined) return;\n\n  //remove last added coordinate\n  state.polygon.removeCoordinate(`0.${state.currentVertexPosition}`);\n  if (state.polygon.isValid()) {\n    this.fire(Constants.events.CREATE, {\n      features: [state.polygon.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.polygon.id], {\n      silent: true\n    });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, {\n      silent: true\n    });\n  }\n};\nDrawPolygon.toDisplayFeatures = function (state, geojson, display) {\n  const isActivePolygon = geojson.properties.id === state.polygon.id;\n  geojson.properties.active = isActivePolygon ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActivePolygon) return display(geojson);\n\n  // Don't render a polygon until it has two positions\n  // (and a 3rd which is just the first repeated)\n  if (geojson.geometry.coordinates.length === 0) return;\n  const coordinateCount = geojson.geometry.coordinates[0].length;\n  // 2 coordinates after selecting a draw type\n  // 3 after creating the first point\n  if (coordinateCount < 3) {\n    return;\n  }\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][0], '0.0', false));\n  if (coordinateCount > 3) {\n    // Add a start position marker to the map, clicking on this will finish the feature\n    // This should only be shown when we're in a valid spot\n    const endPos = geojson.geometry.coordinates[0].length - 3;\n    display(createVertex(state.polygon.id, geojson.geometry.coordinates[0][endPos], `0.${endPos}`, false));\n  }\n  if (coordinateCount <= 4) {\n    // If we've only drawn two positions (plus the closer),\n    // make a LineString instead of a Polygon\n    const lineCoordinates = [[geojson.geometry.coordinates[0][0][0], geojson.geometry.coordinates[0][0][1]], [geojson.geometry.coordinates[0][1][0], geojson.geometry.coordinates[0][1][1]]];\n    // create an initial vertex so that we can track the first point on mobile devices\n    display({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: geojson.properties,\n      geometry: {\n        coordinates: lineCoordinates,\n        type: Constants.geojsonTypes.LINE_STRING\n      }\n    });\n    if (coordinateCount === 3) {\n      return;\n    }\n  }\n  // render the Polygon\n  return display(geojson);\n};\nDrawPolygon.onTrash = function (state) {\n  this.deleteFeature([state.polygon.id], {\n    silent: true\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nexport default DrawPolygon;", "import * as CommonSelectors from '../lib/common_selectors.js';\nimport isEventAtCoordinates from '../lib/is_event_at_coordinates.js';\nimport doubleClickZoom from '../lib/double_click_zoom.js';\nimport * as Constants from '../constants.js';\nimport createVertex from '../lib/create_vertex.js';\nconst DrawLineString = {};\nDrawLineString.onSetup = function (opts) {\n  opts = opts || {};\n  const featureId = opts.featureId;\n  let line, currentVertexPosition;\n  let direction = 'forward';\n  if (featureId) {\n    line = this.getFeature(featureId);\n    if (!line) {\n      throw new Error('Could not find a feature with the provided featureId');\n    }\n    let from = opts.from;\n    if (from && from.type === 'Feature' && from.geometry && from.geometry.type === 'Point') {\n      from = from.geometry;\n    }\n    if (from && from.type === 'Point' && from.coordinates && from.coordinates.length === 2) {\n      from = from.coordinates;\n    }\n    if (!from || !Array.isArray(from)) {\n      throw new Error('Please use the `from` property to indicate which point to continue the line from');\n    }\n    const lastCoord = line.coordinates.length - 1;\n    if (line.coordinates[lastCoord][0] === from[0] && line.coordinates[lastCoord][1] === from[1]) {\n      currentVertexPosition = lastCoord + 1;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[lastCoord]);\n    } else if (line.coordinates[0][0] === from[0] && line.coordinates[0][1] === from[1]) {\n      direction = 'backwards';\n      currentVertexPosition = 0;\n      // add one new coordinate to continue from\n      line.addCoordinate(currentVertexPosition, ...line.coordinates[0]);\n    } else {\n      throw new Error('`from` should match the point at either the start or the end of the provided LineString');\n    }\n  } else {\n    line = this.newFeature({\n      type: Constants.geojsonTypes.FEATURE,\n      properties: {},\n      geometry: {\n        type: Constants.geojsonTypes.LINE_STRING,\n        coordinates: []\n      }\n    });\n    currentVertexPosition = 0;\n    this.addFeature(line);\n  }\n  this.clearSelectedFeatures();\n  doubleClickZoom.disable(this);\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  this.activateUIButton(Constants.types.LINE);\n  this.setActionableState({\n    trash: true\n  });\n  return {\n    line,\n    currentVertexPosition,\n    direction\n  };\n};\nDrawLineString.clickAnywhere = function (state, e) {\n  if (state.currentVertexPosition > 0 && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition - 1]) || state.direction === 'backwards' && isEventAtCoordinates(e, state.line.coordinates[state.currentVertexPosition + 1])) {\n    return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.line.id]\n    });\n  }\n  this.updateUIClasses({\n    mouse: Constants.cursors.ADD\n  });\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (state.direction === 'forward') {\n    state.currentVertexPosition++;\n    state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  } else {\n    state.line.addCoordinate(0, e.lngLat.lng, e.lngLat.lat);\n  }\n};\nDrawLineString.clickOnVertex = function (state) {\n  return this.changeMode(Constants.modes.SIMPLE_SELECT, {\n    featureIds: [state.line.id]\n  });\n};\nDrawLineString.onMouseMove = function (state, e) {\n  state.line.updateCoordinate(state.currentVertexPosition, e.lngLat.lng, e.lngLat.lat);\n  if (CommonSelectors.isVertex(e)) {\n    this.updateUIClasses({\n      mouse: Constants.cursors.POINTER\n    });\n  }\n};\nDrawLineString.onTap = DrawLineString.onClick = function (state, e) {\n  if (CommonSelectors.isVertex(e)) return this.clickOnVertex(state, e);\n  this.clickAnywhere(state, e);\n};\nDrawLineString.onKeyUp = function (state, e) {\n  if (CommonSelectors.isEnterKey(e)) {\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {\n      featureIds: [state.line.id]\n    });\n  } else if (CommonSelectors.isEscapeKey(e)) {\n    this.deleteFeature([state.line.id], {\n      silent: true\n    });\n    this.changeMode(Constants.modes.SIMPLE_SELECT);\n  }\n};\nDrawLineString.onStop = function (state) {\n  doubleClickZoom.enable(this);\n  this.activateUIButton();\n\n  // check to see if we've deleted this feature\n  if (this.getFeature(state.line.id) === undefined) return;\n\n  //remove last added coordinate\n  state.line.removeCoordinate(`${state.currentVertexPosition}`);\n  if (state.line.isValid()) {\n    this.fire(Constants.events.CREATE, {\n      features: [state.line.toGeoJSON()]\n    });\n  } else {\n    this.deleteFeature([state.line.id], {\n      silent: true\n    });\n    this.changeMode(Constants.modes.SIMPLE_SELECT, {}, {\n      silent: true\n    });\n  }\n};\nDrawLineString.onTrash = function (state) {\n  this.deleteFeature([state.line.id], {\n    silent: true\n  });\n  this.changeMode(Constants.modes.SIMPLE_SELECT);\n};\nDrawLineString.toDisplayFeatures = function (state, geojson, display) {\n  const isActiveLine = geojson.properties.id === state.line.id;\n  geojson.properties.active = isActiveLine ? Constants.activeStates.ACTIVE : Constants.activeStates.INACTIVE;\n  if (!isActiveLine) return display(geojson);\n  // Only render the line if it has at least one real coordinate\n  if (geojson.geometry.coordinates.length < 2) return;\n  geojson.properties.meta = Constants.meta.FEATURE;\n  display(createVertex(state.line.id, geojson.geometry.coordinates[state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1], `${state.direction === 'forward' ? geojson.geometry.coordinates.length - 2 : 1}`, false));\n  display(geojson);\n};\nexport default DrawLineString;", "import simple_select from './simple_select.js';\nimport direct_select from './direct_select.js';\nimport draw_point from './draw_point.js';\nimport draw_polygon from './draw_polygon.js';\nimport draw_line_string from './draw_line_string.js';\nexport default {\n  simple_select,\n  direct_select,\n  draw_point,\n  draw_polygon,\n  draw_line_string\n};", "import * as Constants from './constants.js';\nimport styles from './lib/theme.js';\nimport modes from './modes/index.js';\nconst defaultOptions = {\n  defaultMode: Constants.modes.SIMPLE_SELECT,\n  keybindings: true,\n  touchEnabled: true,\n  clickBuffer: 2,\n  touchBuffer: 25,\n  boxSelect: true,\n  displayControlsDefault: true,\n  styles,\n  modes,\n  controls: {},\n  userProperties: false,\n  suppressAPIEvents: true\n};\nconst showControls = {\n  point: true,\n  line_string: true,\n  polygon: true,\n  trash: true,\n  combine_features: true,\n  uncombine_features: true\n};\nconst hideControls = {\n  point: false,\n  line_string: false,\n  polygon: false,\n  trash: false,\n  combine_features: false,\n  uncombine_features: false\n};\nfunction addSources(styles, sourceBucket) {\n  return styles.map(style => {\n    if (style.source) return style;\n    return Object.assign({}, style, {\n      id: `${style.id}.${sourceBucket}`,\n      source: sourceBucket === 'hot' ? Constants.sources.HOT : Constants.sources.COLD\n    });\n  });\n}\nexport default function (options = {}) {\n  let withDefaults = Object.assign({}, options);\n  if (!options.controls) {\n    withDefaults.controls = {};\n  }\n  if (options.displayControlsDefault === false) {\n    withDefaults.controls = Object.assign({}, hideControls, options.controls);\n  } else {\n    withDefaults.controls = Object.assign({}, showControls, options.controls);\n  }\n  withDefaults = Object.assign({}, defaultOptions, withDefaults);\n\n  // Layers with a shared source should be adjacent for performance reasons\n  withDefaults.styles = addSources(withDefaults.styles, 'cold').concat(addSources(withDefaults.styles, 'hot'));\n  return withDefaults;\n}", "import isEqual from 'fast-deep-equal';\nimport normalize from '@mapbox/geojson-normalize';\nimport { generateID } from './lib/id.js';\nimport featuresAt from './lib/features_at.js';\nimport stringSetsAreEqual from './lib/string_sets_are_equal.js';\nimport * as Constants from './constants.js';\nimport StringSet from './lib/string_set.js';\nimport Polygon from './feature_types/polygon.js';\nimport LineString from './feature_types/line_string.js';\nimport Point from './feature_types/point.js';\nimport MultiFeature from './feature_types/multi_feature.js';\nconst featureTypes = {\n  Polygon,\n  LineString,\n  Point,\n  MultiPolygon: MultiFeature,\n  MultiLineString: MultiFeature,\n  MultiPoint: MultiFeature\n};\nexport default function (ctx, api) {\n  api.modes = Constants.modes;\n\n  // API doesn't emit events by default\n  const silent = ctx.options.suppressAPIEvents !== undefined ? !!ctx.options.suppressAPIEvents : true;\n  api.getFeatureIdsAt = function (point) {\n    const features = featuresAt.click({\n      point\n    }, null, ctx);\n    return features.map(feature => feature.properties.id);\n  };\n  api.getSelectedIds = function () {\n    return ctx.store.getSelectedIds();\n  };\n  api.getSelected = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedIds().map(id => ctx.store.get(id)).map(feature => feature.toGeoJSON())\n    };\n  };\n  api.getSelectedPoints = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getSelectedCoordinates().map(coordinate => ({\n        type: Constants.geojsonTypes.FEATURE,\n        properties: {},\n        geometry: {\n          type: Constants.geojsonTypes.POINT,\n          coordinates: coordinate.coordinates\n        }\n      }))\n    };\n  };\n  api.set = function (featureCollection) {\n    if (featureCollection.type === undefined || featureCollection.type !== Constants.geojsonTypes.FEATURE_COLLECTION || !Array.isArray(featureCollection.features)) {\n      throw new Error('Invalid FeatureCollection');\n    }\n    const renderBatch = ctx.store.createRenderBatch();\n    let toDelete = ctx.store.getAllIds().slice();\n    const newIds = api.add(featureCollection);\n    const newIdsLookup = new StringSet(newIds);\n    toDelete = toDelete.filter(id => !newIdsLookup.has(id));\n    if (toDelete.length) {\n      api.delete(toDelete);\n    }\n    renderBatch();\n    return newIds;\n  };\n  api.add = function (geojson) {\n    const featureCollection = JSON.parse(JSON.stringify(normalize(geojson)));\n    const ids = featureCollection.features.map(feature => {\n      feature.id = feature.id || generateID();\n      if (feature.geometry === null) {\n        throw new Error('Invalid geometry: null');\n      }\n      if (ctx.store.get(feature.id) === undefined || ctx.store.get(feature.id).type !== feature.geometry.type) {\n        // If the feature has not yet been created ...\n        const Model = featureTypes[feature.geometry.type];\n        if (Model === undefined) {\n          throw new Error(`Invalid geometry type: ${feature.geometry.type}.`);\n        }\n        const internalFeature = new Model(ctx, feature);\n        ctx.store.add(internalFeature, {\n          silent\n        });\n      } else {\n        // If a feature of that id has already been created, and we are swapping it out ...\n        const internalFeature = ctx.store.get(feature.id);\n        const originalProperties = internalFeature.properties;\n        internalFeature.properties = feature.properties;\n        if (!isEqual(originalProperties, feature.properties)) {\n          ctx.store.featureChanged(internalFeature.id, {\n            silent\n          });\n        }\n        if (!isEqual(internalFeature.getCoordinates(), feature.geometry.coordinates)) {\n          internalFeature.incomingCoords(feature.geometry.coordinates);\n        }\n      }\n      return feature.id;\n    });\n    ctx.store.render();\n    return ids;\n  };\n  api.get = function (id) {\n    const feature = ctx.store.get(id);\n    if (feature) {\n      return feature.toGeoJSON();\n    }\n  };\n  api.getAll = function () {\n    return {\n      type: Constants.geojsonTypes.FEATURE_COLLECTION,\n      features: ctx.store.getAll().map(feature => feature.toGeoJSON())\n    };\n  };\n  api.delete = function (featureIds) {\n    ctx.store.delete(featureIds, {\n      silent\n    });\n    // If we were in direct select mode and our selected feature no longer exists\n    // (because it was deleted), we need to get out of that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT && !ctx.store.getSelectedIds().length) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, {\n        silent\n      });\n    } else {\n      ctx.store.render();\n    }\n    return api;\n  };\n  api.deleteAll = function () {\n    ctx.store.delete(ctx.store.getAllIds(), {\n      silent\n    });\n    // If we were in direct select mode, now our selected feature no longer exists,\n    // so escape that mode.\n    if (api.getMode() === Constants.modes.DIRECT_SELECT) {\n      ctx.events.changeMode(Constants.modes.SIMPLE_SELECT, undefined, {\n        silent\n      });\n    } else {\n      ctx.store.render();\n    }\n    return api;\n  };\n  api.changeMode = function (mode, modeOptions = {}) {\n    // Avoid changing modes just to re-select what's already selected\n    if (mode === Constants.modes.SIMPLE_SELECT && api.getMode() === Constants.modes.SIMPLE_SELECT) {\n      if (stringSetsAreEqual(modeOptions.featureIds || [], ctx.store.getSelectedIds())) return api;\n      // And if we are changing the selection within simple_select mode, just change the selection,\n      // instead of stopping and re-starting the mode\n      ctx.store.setSelected(modeOptions.featureIds, {\n        silent\n      });\n      ctx.store.render();\n      return api;\n    }\n    if (mode === Constants.modes.DIRECT_SELECT && api.getMode() === Constants.modes.DIRECT_SELECT && modeOptions.featureId === ctx.store.getSelectedIds()[0]) {\n      return api;\n    }\n    ctx.events.changeMode(mode, modeOptions, {\n      silent\n    });\n    return api;\n  };\n  api.getMode = function () {\n    return ctx.events.getMode();\n  };\n  api.trash = function () {\n    ctx.events.trash({\n      silent\n    });\n    return api;\n  };\n  api.combineFeatures = function () {\n    ctx.events.combineFeatures({\n      silent\n    });\n    return api;\n  };\n  api.uncombineFeatures = function () {\n    ctx.events.uncombineFeatures({\n      silent\n    });\n    return api;\n  };\n  api.setFeatureProperty = function (featureId, property, value) {\n    ctx.store.setFeatureProperty(featureId, property, value, {\n      silent\n    });\n    return api;\n  };\n  return api;\n}", "export default function (a, b) {\n  if (a.length !== b.length) return false;\n  return JSON.stringify(a.map(id => id).sort()) === JSON.stringify(b.map(id => id).sort());\n}", "import * as CommonSelectors from \"./common_selectors.js\";\nimport constrainFeatureMovement from \"./constrain_feature_movement.js\";\nimport createMidPoint from \"./create_midpoint.js\";\nimport createSupplementaryPoints from \"./create_supplementary_points.js\";\nimport createVertex from \"./create_vertex.js\";\nimport doubleClickZoom from \"./double_click_zoom.js\";\nimport euclideanDistance from \"./euclidean_distance.js\";\nimport featuresAt from \"./features_at.js\";\nimport getFeatureAtAndSetCursors from \"./get_features_and_set_cursor.js\";\nimport isClick from \"./is_click.js\";\nimport isEventAtCoordinates from \"./is_event_at_coordinates.js\";\nimport isTap from \"./is_tap.js\";\nimport mapEventToBoundingBox from \"./map_event_to_bounding_box.js\";\nimport ModeHandler from \"./mode_handler.js\";\nimport moveFeatures from \"./move_features.js\";\nimport sortFeatures from \"./sort_features.js\";\nimport StringSet from \"./string_set.js\";\nimport stringSetsAreEqual from \"./string_sets_are_equal.js\";\nimport theme from \"./theme.js\";\nimport toDenseArray from \"./to_dense_array.js\";\nexport { CommonSelectors, constrainFeatureMovement, createMidPoint, createSupplementaryPoints, createVertex, doubleClickZoom, euclideanDistance, featuresAt, getFeatureAtAndSetCursors, isClick, isEventAtCoordinates, isTap, mapEventToBoundingBox, ModeHandler, moveFeatures, sortFeatures, stringSetsAreEqual, StringSet, theme, toDenseArray };", "import runSetup from './src/setup.js';\nimport setupOptions from './src/options.js';\nimport setupAPI from './src/api.js';\nimport modes from './src/modes/index.js';\nimport * as Constants from './src/constants.js';\nimport * as lib from './src/lib/index.js';\nconst setupDraw = function (options, api) {\n  options = setupOptions(options);\n  const ctx = {\n    options\n  };\n  api = setupAPI(ctx, api);\n  ctx.api = api;\n  const setup = runSetup(ctx);\n  api.onAdd = setup.onAdd;\n  api.onRemove = setup.onRemove;\n  api.types = Constants.types;\n  api.options = options;\n  return api;\n};\nfunction MapboxDraw(options) {\n  setupDraw(options, this);\n}\nMapboxDraw.modes = modes;\nMapboxDraw.constants = Constants;\nMapboxDraw.lib = lib;\nexport default MapboxDraw;"],
  "mappings": "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",
  "names": ["area", "normalize", "types", "area", "classes", "modes", "events", "Point", "Point", "LAT_MIN", "LAT_MAX", "LAT_RENDERED_MIN", "LAT_RENDERED_MAX", "LNG_MIN", "LNG_MAX", "isFeature", "isVertex", "isFeature", "normalize", "isEqual"]
}
